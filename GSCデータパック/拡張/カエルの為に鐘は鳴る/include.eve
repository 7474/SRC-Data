

# ローカル戦闘アニメです。
# KTKN_金で解決処理
# KTKN_ターゲット変更
# KTKN_回転連続描画

#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


戦闘アニメ_KTKN_金で解決処理クリティカル:
SetMessage 相手パイロット 破壊 "-"
SetMessage 相手パイロット 脱出 "-"
Return

#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

戦闘アニメ_KTKN_ターゲット変更命中:
# 書式「KTKN_ターゲット変更 (攻撃する側パイロット名) (される側パイロット名)」

Select Args(1)
SelectTarget Args(2)
Return

#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/



戦闘アニメ_KTKN_回転連続描画命中:

# 引数１ 画像ファイル(連続表示)
# 引数２ 画像サイズ
# 引数３ 表示時間
# 引数４ 表示位置
# 引数５ 効果音
# 引数６ 発光
# 引数７ 保持
# 引数８ 方向判定
# 引数９ ユニットＩＤ
#
# 引数 角度=(整数) (指定した角度に右周りで画像を回転させる。「発射」と組み合わせ可能)
# 引数 ランダム (ランダム角度で画像を回転) or 発射(発射画像を相手方向に向けて描画)
# 引数 中間 対象と相手ユニットの中間でアニメを再生する


Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
_CenteringCheck UID

Local GS_STR = _GetBoxSizeFromArgs(Args(2))
Local G_SX = _GN(32,_SelectBmpSizeType(GS_STR,"Ｘ"))
Local G_SY = _GN(32,_SelectBmpSizeType(GS_STR,"Ｙ"))
Local i
Local j
Local C_X = WX(UID)
LOcal C_Y = WY(UID)
Local G_X = (WX(UID) + 16)
LOcal G_Y = (WY(UID) + 16)
Local BMP_FILE = _GetBMPName(UID)
Local T_COL_F = _ColorTime(_IsLight())
Local W_T
Local B_FLG = _S_OPT_FA("背面")
Local DRCT = ""
Local POS = _GetDrawPosFromArgs()
Local T_COL = _ColorTime()

Local ANG = 0
Local ANGP

If ((X(対象ユニットＩＤ) < _Get_X(相手ユニットＩＤ)) And (_S_OPT_FA("方向判定") = "方向判定")) Then
  Set DRCT 左右反転
EndIf
Local UD_OPT = _S_OPT_FA("上下反転")
Local LR_OPT = _S_OPT_FA("左右反転")
If ((DRCT != "") And (LR_OPT != "")) Then
  Set DRCT ""
ElseIf (LR_OPT != "") Then
  Set DRCT LR_OPT
EndIf

If (_SearchOptionFromArgs("中間") != "") Then
  G_X = (((WX(対象ユニットＩＤ) + WX(相手ユニットＩＤ)) * 0.5) + 16)
  G_Y = (((WY(対象ユニットＩＤ) + WY(相手ユニットＩＤ)) * 0.5) + 16)
EndIf


Incr G_X (G_SX * -0.5)

Switch POS
Case "上辺"
  Incr G_Y -16
Case "下辺"
  Incr G_Y ((G_SY * -1) + 16)
Case Else
  Incr G_Y (G_SY * -0.5)
EndSw

# 角度設定

If (_SearchOptionFromArgs("発射") != "") Then
  ANG = _GetAngle(対象ユニットＩＤ)
EndIf

If (DRCT = "左右反転") Then
	ANGP = (_GetOptValueFromArgs("角度") * -1)
Else
	ANGP = _GetOptValueFromArgs("角度")
EndIf

ANG = ANG + ANGP




_GBA_GetBmpPatternInfo _G_APTN_FA() _GetName(_GetWavFromArgs(),_GetOptParamsFromArgs("連続効果音"))
Set W_T (Args(3) / _GBA_P_TTL)

#_GetNumberFromArgs(Args(4))

For j = 1 To _GetNumberFromArgs(Args(4))

If (_SearchOptionFromArgs("ランダム") != "") Then
  ANG = random(360)
EndIf

Wait Start
	For i = 1 To _GBA_P_TTL
	  _CheckPlaySound _GBA_P_WAV[i]
	  ClearPicture
	  If (B_FLG = "背面") Then
	    PaintPicture _SetBmpNum2(_GBA_P_NAME,(_GBA_P_STR + ((i - 1) * _GBA_P_FRC)),_GBA_P_TYPE) _
	                 G_X G_Y G_SX G_SY DRCT 透過 T_COL_F UD_OPT LR_OPT 右回転 ANG
	    PaintPicture BMP_FILE C_X C_Y 32 32 透過 T_COL
	  Else
	    PaintPicture _SetBmpNum2(_GBA_P_NAME,(_GBA_P_STR + ((i - 1) * _GBA_P_FRC)),_GBA_P_TYPE) _
	                 G_X G_Y G_SX G_SY DRCT 透過 T_COL_F UD_OPT LR_OPT 右回転 ANG
	  EndIf
	  Refresh
	  Wait Until (i * W_T)
	Next
Next

_GBA_UnSetBmpPattern

If (_S_OPT_FA("保持") = "保持") Then
  Return "Keep"
Else
  Return
EndIf

#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/



