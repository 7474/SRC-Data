

# ローカル戦闘アニメです。


戦闘アニメ_WMDLA_バウンドボール攻撃:
# 引数 サイズ

Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
_CenteringCheck UID

Local posX posY
Local ANG B_ANG
Local DST
Local i
Local SHOTA

#発射物に関する変数
Local G_S = Args(1)
Local C_X = WX(UID)
Local C_Y = WY(UID)


Local DRCT
Local W_T

  Set ANG _GetAngle(UID)
  Set posX ((X(UID) - _Get_X(相手ユニットＩＤ)) * 32)
  Set posY ((Y(UID) - _Get_Y(相手ユニットＩＤ)) * 32)
  Set DST (Abs(X(UID) - _Get_X(相手ユニットＩＤ)) _
         + Abs(Y(UID) - _Get_Y(相手ユニットＩＤ)))
         
Set B_ANG _CheckAngleFix(ANG)
Set DRCT _FlipVertical(ANG)


Incr C_X (16 - (G_S \ 2))
Incr C_Y (16 - (G_S \ 2))

  Set DST (2 * DST)
  Set W_T 0.6

Wait Reset

For i = 1 To (DST + 1)

  If SHOTA = 4 Then
   Set SHOTA 0
  EndIf
ClearPicture

  If  i > 1 Then
       If SHOTA < 2 Then
       PaintPicture Bullet\EFFECT_AuraBall(Red)02.bmp _
        (C_X - (posX / (DST + 2)) * (i - 2)) (C_Y - (posY / (DST + 2)) * (i - 2) ) _
        G_S G_S 透過 セピア 右回転 B_ANG DRCT
       Else
       PaintPicture Bullet\EFFECT_AuraBall(Yellow)02.bmp _
        (C_X - (posX / (DST + 2)) * (i - 2)) (C_Y - (posY / (DST + 2)) * (i - 2) ) _
        G_S G_S 透過 セピア 右回転 B_ANG DRCT
	   Endif
	   Incr SHOTA 1
  EndIf

  If SHOTA < 2 Then
  PaintPicture Bullet\EFFECT_AuraBall(Orange)02.bmp _
    (C_X - (posX / (DST + 2)) * i) (C_Y - (posY / (DST + 2)) * i) _
    G_S G_S 透過 右回転 B_ANG DRCT
  Else
  PaintPicture Bullet\EFFECT_AuraBall(Purple)02.bmp _
    (C_X - (posX / (DST + 2)) * i) (C_Y - (posY / (DST + 2)) * i) _
    G_S G_S 透過 右回転 B_ANG DRCT
  Endif
  Refresh
  Wait Until (W_T * i)
Next

ClearPicture
Refresh

Return


戦闘アニメ_WMDLA_二重連続描画準備:
戦闘アニメ_WMDLA_二重連続描画攻撃:
戦闘アニメ_WMDLA_二重連続描画命中:
戦闘アニメ_WMDLA_二重連続描画使用:
戦闘アニメ_WMDLA_二重連続描画クリティカル:
# 連番形式画像１ サイズ 連番形式画像２ サイズ 再生時間 回数
# ファイル１と２は同ペースで再生される。速度と枚数は１枚目から得られる情報に倣う
#
# 引数１ 画像ファイル(連続表示)
# 引数２ 画像サイズ
# 引数３ 表示時間
# 引数４ 表示位置
# 引数５ 効果音
# 引数６ 発光
# 引数７ 保持
# 引数８ 方向判定
# 引数９ ユニットＩＤ
#
# 引数 角度=(整数) 角度２(指定した角度に右周りで画像を回転させる。「発射」と組み合わせ可能)
# 引数 ランダム、ランダム２ (ランダム角度で画像を回転) or 発射(発射画像を相手方向に向けて描画)
# 引数 中間 対象と相手ユニットの中間でアニメを再生する
# 引数 上辺、上辺２、下辺、下辺２
# 引数 上下反転 上下反転２ 左右反転 左右反転２

Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
_CenteringCheck UID

Local GS_STR = _GetBoxSizeFromArgs(Args(2))
Local GS_STR2 = _GetBoxSizeFromArgs(Args(4))
Local G_SX = _GN(32,_SelectBmpSizeType(GS_STR,"Ｘ"))
Local G_SY = _GN(32,_SelectBmpSizeType(GS_STR,"Ｙ"))
Local G_SX2 = _GN(32,_SelectBmpSizeType(GS_STR2,"Ｘ"))
Local G_SY2 = _GN(32,_SelectBmpSizeType(GS_STR2,"Ｙ"))
Local i j k
Local C_X = WX(UID)
LOcal C_Y = WY(UID)
Local G_X = (WX(UID) + 16)
LOcal G_Y = (WY(UID) + 16)
Local BMP_FILE = _GetBMPName(UID)
Local T_COL_F = _ColorTime(_IsLight())
Local W_T
Local B_FLG = _S_OPT_FA("背面")
Local DRCT = ""
Local DRCT2 = ""
Local POS = _GetDrawPosFromArgs()
Local T_COL = _ColorTime()

Local ANG = 0

# 画像反転判定

If ((X(対象ユニットＩＤ) < _Get_X(相手ユニットＩＤ)) And (_S_OPT_FA("方向判定") = "方向判定")) Then
  Set DRCT 左右反転
  Set DRCT2 左右反転
EndIf
Local UD_OPT = _S_OPT_FA("上下反転")
Local LR_OPT = _S_OPT_FA("左右反転")
If ((DRCT != "") And (LR_OPT != "")) Then
  Set DRCT ""
ElseIf (LR_OPT != "") Then
  Set DRCT LR_OPT
EndIf
Local UD_OPT2 = ""
If (_SearchOptionFromArgs("上下反転２") != "") Then
	UD_OPT2 = "上下反転"
EndIf
Local LR_OPT2 = ""
If (_SearchOptionFromArgs("左右反転２") != "") Then
	LR_OPT2 = "左右反転"
Endif
If ((DRCT2 != "") And (LR_OPT2 != "")) Then
  Set DRCT2 ""
ElseIf (LR_OPT != "") Then
  Set DRCT2 LR_OPT2
EndIf


If (_SearchOptionFromArgs("中間") != "") Then
  G_X = (((WX(対象ユニットＩＤ) + WX(相手ユニットＩＤ)) * 0.5) + 16)
  G_Y = (((WY(対象ユニットＩＤ) + WY(相手ユニットＩＤ)) * 0.5) + 16)
EndIf

Local G_X2 = G_X
LOcal G_Y2 = G_Y

Incr G_X (G_SX * -0.5)
Incr G_X2 (G_SX2 * -0.5)

Switch POS
Case "上辺"
  Incr G_Y -16
Case "下辺"
  Incr G_Y ((G_SY * -1) + 16)
Case Else
  Incr G_Y (G_SY * -0.5)
EndSw

If (_SearchOptionFromArgs("上辺２") != "") Then
  Incr G_Y2 -16
elseIf (_SearchOptionFromArgs("下辺２") != "") Then
  Incr G_Y2 ((G_SY2 * -1) + 16)
Else
  Incr G_Y2 (G_SY2 * -0.5)
EndIf

# 角度設定

If (_SearchOptionFromArgs("発射") != "") Then
  ANG = _GetAngle(対象ユニットＩＤ)
EndIf

Local ANG2 = ANG

ANG = ANG + _GetOptValueFromArgs("角度")
ANG2 = ANG2 + _GetOptValueFromArgs("角度２")

If (DRCT = "左右反転") Then
	ANG = ANG * -1
	ANG2 = ANG2 * -1
EndIf



# 先に二枚目ファイル画像情報取得
_GBA_GetBmpPatternInfo _G_APTN_FA(Args(3)) _GetName(_GetWavFromArgs(),_GetOptParamsFromArgs("連続効果音"))
# ２枚目の情報を保存
Local _GBA_P_NAME2 = _GBA_P_NAME
Local _GBA_P_STR2 = _GBA_P_STR
Local _GBA_P_END2 = _GBA_P_END
Local _GBA_P_TYPE2 = _GBA_P_TYPE
Local _GBA_P_FRC2 = _GBA_P_FRC
Local _GBA_P_TTL2 = _GBA_P_TTL

# 一枚目情報取得
_GBA_GetBmpPatternInfo _G_APTN_FA(Args(1)) _GetName(_GetWavFromArgs(),_GetOptParamsFromArgs("連続効果音"))

Set W_T (Args(5) / _GBA_P_TTL)

#_GetNumberFromArgs(Args(4))

For j = 1 To _GetNumberFromArgs(Args(6))

If (_SearchOptionFromArgs("ランダム") != "") Then
  ANG = random(360)
EndIf
If (_SearchOptionFromArgs("ランダム２") != "") Then
  ANG2 = random(360)
EndIf

Set k 0

Wait Start
	For i = 1 To _GBA_P_TTL
	
	if i > _GBA_P_TTL2 Then
	else
		Incr k 1
	Endif
	
	  _CheckPlaySound _GBA_P_WAV[i]
	  ClearPicture
	  If (B_FLG = "背面") Then
	    PaintPicture _SetBmpNum2(_GBA_P_NAME2,(_GBA_P_STR2 + ((k - 1) * _GBA_P_FRC2)),_GBA_P_TYPE2) _
	                 G_X2 G_Y2 G_SX2 G_SY2 DRCT2 透過 T_COL_F UD_OPT2 LR_OPT2 右回転 ANG2
	    PaintPicture _SetBmpNum2(_GBA_P_NAME,(_GBA_P_STR + ((i - 1) * _GBA_P_FRC)),_GBA_P_TYPE) _
	                 G_X G_Y G_SX G_SY DRCT 透過 T_COL_F UD_OPT LR_OPT 右回転 ANG
	    PaintPicture BMP_FILE C_X C_Y 32 32 透過 T_COL
	  Else
	    PaintPicture _SetBmpNum2(_GBA_P_NAME2,(_GBA_P_STR2 + ((k - 1) * _GBA_P_FRC2)),_GBA_P_TYPE2) _
	                 G_X2 G_Y2 G_SX2 G_SY2 DRCT2 透過 T_COL_F UD_OPT2 LR_OPT2 右回転 ANG2
	    PaintPicture _SetBmpNum2(_GBA_P_NAME,(_GBA_P_STR + ((i - 1) * _GBA_P_FRC)),_GBA_P_TYPE) _
	                 G_X G_Y G_SX G_SY DRCT 透過 T_COL_F UD_OPT LR_OPT 右回転 ANG
	  EndIf
	  Refresh
	  Wait Until (i * W_T)
	Next
Next

_GBA_UnSetBmpPattern


If (_S_OPT_FA("保持") = "保持") Then
  Return "Keep"
Else
  Return
EndIf

