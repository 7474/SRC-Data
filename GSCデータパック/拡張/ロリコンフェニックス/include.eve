# LOLIP_フェニックスモードＭ
# LOLIP_少女のパンツの色
# LOLIP_ターゲット変更
# LOLIP_回転連続描画
# LOLIP_二重連続描画
# LOLIP_高速準備
# LOLIP_頭上攻撃
# LOLIP_逆回転


#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

戦闘アニメ_LOLIP_フェニックスモードＭ使用:
Switch Random(10)
Case 1
Set LOLIP_PMM "ホアーーーー！！"
Case 2
Set LOLIP_PMM "フェニッーーークス！！.シリ穴から少女エネルギーが注入された！！.今のオレは無敵だァー！！"
Case 3
Set LOLIP_PMM "うおお！！ 少女エネルギーが流れ込んでくる！！.復活だァーーー！！"
Case 4
Set LOLIP_PMM "うおお！！　フェニックスーーー！！.エネルギーモリモリだぜ！！"
Case 5
Set LOLIP_PMM "はーーーーーー！！.フェニーーックス！！"
Case 6
Set LOLIP_PMM "うはーーー！！.少女エネルギーがトイレットペーパーごしに！！"
Case 7
Set LOLIP_PMM "彼女たちの想いは受け取った！！.いくぞ！！"
Case 8
Set LOLIP_PMM "鎖骨見えたーーーーーー！！"
Case 9
Set LOLIP_PMM "お兄ちゃんも大好きだァーーーー！！"
Case 10
Set LOLIP_PMM "そしてその舌使いがオレに力を与えた――.フェニーーーックス！！"
EndSw

Return

#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


戦闘アニメ_LOLIP_少女のパンツの色命中:
Switch Random(6)
Case 1
Set LOLIP_GPC "水色ストライプ"
Case 2
Set LOLIP_GPC "水玉"
Case 3
Set LOLIP_GPC "白"
Case 4
Set LOLIP_GPC "しましま"
Case 5
Set LOLIP_GPC "ピンク"
Case 6
Set LOLIP_GPC "くまさん"
EndSw

Return


#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


戦闘アニメ_LOLIP_ターゲット変更攻撃:
戦闘アニメ_LOLIP_ターゲット変更命中:
# 書式「LOLIP_ターゲット変更 (攻撃する側パイロット名) (される側パイロット名)」

Select Args(1)
SelectTarget Args(2)
Return



#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/



戦闘アニメ_LOLIP_回転連続描画準備:
戦闘アニメ_LOLIP_回転連続描画攻撃:
戦闘アニメ_LOLIP_回転連続描画命中:
戦闘アニメ_LOLIP_回転連続描画使用:
戦闘アニメ_LOLIP_回転連続描画クリティカル:
# 引数１ 画像ファイル(連続表示)
# 引数２ 画像サイズ
# 引数３ 表示時間
# 引数４ 表示位置
# 引数５ 効果音
# 引数６ 発光
# 引数７ 保持
# 引数８ 方向判定
# 引数９ ユニットＩＤ
#
# 引数 角度=(整数) (指定した角度に右周りで画像を回転させる。「発射」と組み合わせ可能)
# 引数 ランダム (ランダム角度で画像を回転) or 発射(発射画像を相手方向に向けて描画)
# 引数 中間 対象と相手ユニットの中間でアニメを再生する


Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
_CenteringCheck UID

Local GS_STR = _GetBoxSizeFromArgs(Args(2))
Local G_SX = _GN(32,_SelectBmpSizeType(GS_STR,"Ｘ"))
Local G_SY = _GN(32,_SelectBmpSizeType(GS_STR,"Ｙ"))
Local i
Local j
Local C_X = WX(UID)
LOcal C_Y = WY(UID)
Local G_X = (WX(UID) + 16)
LOcal G_Y = (WY(UID) + 16)
Local BMP_FILE = _GetBMPName(UID)
Local T_COL_F = _ColorTime(_IsLight())
Local W_T
Local B_FLG = _S_OPT_FA("背面")
Local DRCT = ""
Local POS = _GetDrawPosFromArgs()
Local T_COL = _ColorTime()

Local ANG = 0
Local ANGP

If ((X(対象ユニットＩＤ) < _Get_X(相手ユニットＩＤ)) And (_S_OPT_FA("方向判定") = "方向判定")) Then
  Set DRCT 左右反転
EndIf
Local UD_OPT = _S_OPT_FA("上下反転")
Local LR_OPT = _S_OPT_FA("左右反転")
If ((DRCT != "") And (LR_OPT != "")) Then
  Set DRCT ""
ElseIf (LR_OPT != "") Then
  Set DRCT LR_OPT
EndIf

If (_SearchOptionFromArgs("中間") != "") Then
  G_X = (((WX(対象ユニットＩＤ) + WX(相手ユニットＩＤ)) * 0.5) + 16)
  G_Y = (((WY(対象ユニットＩＤ) + WY(相手ユニットＩＤ)) * 0.5) + 16)
EndIf


Incr G_X (G_SX * -0.5)

Switch POS
Case "上辺"
  Incr G_Y -16
Case "下辺"
  Incr G_Y ((G_SY * -1) + 16)
Case Else
  Incr G_Y (G_SY * -0.5)
EndSw

# 角度設定

If (_SearchOptionFromArgs("発射") != "") Then
  ANG = _GetAngle(対象ユニットＩＤ)
EndIf

If (DRCT = "左右反転") Then
	ANGP = (_GetOptValueFromArgs("角度") * -1)
Else
	ANGP = _GetOptValueFromArgs("角度")
EndIf

ANG = ANG + ANGP




_GBA_GetBmpPatternInfo _G_APTN_FA() _GetName(_GetWavFromArgs(),_GetOptParamsFromArgs("連続効果音"))
Set W_T (Args(3) / _GBA_P_TTL)

#_GetNumberFromArgs(Args(4))

For j = 1 To _GetNumberFromArgs(Args(4))

If (_SearchOptionFromArgs("ランダム") != "") Then
  ANG = random(360)
EndIf

Wait Start
	For i = 1 To _GBA_P_TTL
	  _CheckPlaySound _GBA_P_WAV[i]
	  ClearPicture
	  If (B_FLG = "背面") Then
	    PaintPicture _SetBmpNum2(_GBA_P_NAME,(_GBA_P_STR + ((i - 1) * _GBA_P_FRC)),_GBA_P_TYPE) _
	                 G_X G_Y G_SX G_SY DRCT 透過 T_COL_F UD_OPT LR_OPT 右回転 ANG
	    PaintPicture BMP_FILE C_X C_Y 32 32 透過 T_COL
	  Else
	    PaintPicture _SetBmpNum2(_GBA_P_NAME,(_GBA_P_STR + ((i - 1) * _GBA_P_FRC)),_GBA_P_TYPE) _
	                 G_X G_Y G_SX G_SY DRCT 透過 T_COL_F UD_OPT LR_OPT 右回転 ANG
	  EndIf
	  Refresh
	  Wait Until (i * W_T)
	Next
Next

_GBA_UnSetBmpPattern

If (_S_OPT_FA("保持") = "保持") Then
  Return "Keep"
Else
  Return
EndIf


#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


戦闘アニメ_LOLIP_二重連続描画準備:
戦闘アニメ_LOLIP_二重連続描画攻撃:
戦闘アニメ_LOLIP_二重連続描画命中:
戦闘アニメ_LOLIP_二重連続描画使用:
戦闘アニメ_LOLIP_二重連続描画クリティカル:
# 連番形式画像１ サイズ 連番形式画像２ サイズ 再生時間 回数
# ファイル１と２は同ペースで再生される。速度と枚数は１枚目から得られる情報に倣う
#
# 引数１ 画像ファイル(連続表示)
# 引数２ 画像サイズ
# 引数３ 表示時間
# 引数４ 表示位置
# 引数５ 効果音
# 引数６ 発光
# 引数７ 保持
# 引数８ 方向判定
# 引数９ ユニットＩＤ
#
# 引数 角度=(整数) 角度２(指定した角度に右周りで画像を回転させる。「発射」と組み合わせ可能)
# 引数 ランダム、ランダム２ (ランダム角度で画像を回転) or 発射(発射画像を相手方向に向けて描画)
# 引数 中間 対象と相手ユニットの中間でアニメを再生する
# 引数 上辺、上辺２、下辺、下辺２
# 引数 上下反転 上下反転２ 左右反転 左右反転２

Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
_CenteringCheck UID

Local GS_STR = _GetBoxSizeFromArgs(Args(2))
Local GS_STR2 = _GetBoxSizeFromArgs(Args(4))
Local G_SX = _GN(32,_SelectBmpSizeType(GS_STR,"Ｘ"))
Local G_SY = _GN(32,_SelectBmpSizeType(GS_STR,"Ｙ"))
Local G_SX2 = _GN(32,_SelectBmpSizeType(GS_STR2,"Ｘ"))
Local G_SY2 = _GN(32,_SelectBmpSizeType(GS_STR2,"Ｙ"))
Local i j k
Local C_X = WX(UID)
LOcal C_Y = WY(UID)
Local G_X = (WX(UID) + 16)
LOcal G_Y = (WY(UID) + 16)
Local BMP_FILE = _GetBMPName(UID)
Local T_COL_F = _ColorTime(_IsLight())
Local W_T
Local B_FLG = _S_OPT_FA("背面")
Local DRCT = ""
Local DRCT2 = ""
Local POS = _GetDrawPosFromArgs()
Local T_COL = _ColorTime()

Local ANG = 0

# 画像反転判定

If ((X(対象ユニットＩＤ) < _Get_X(相手ユニットＩＤ)) And (_S_OPT_FA("方向判定") = "方向判定")) Then
  Set DRCT 左右反転
  Set DRCT2 左右反転
EndIf
Local UD_OPT = _S_OPT_FA("上下反転")
Local LR_OPT = _S_OPT_FA("左右反転")
If ((DRCT != "") And (LR_OPT != "")) Then
  Set DRCT ""
ElseIf (LR_OPT != "") Then
  Set DRCT LR_OPT
EndIf
Local UD_OPT2 = ""
If (_SearchOptionFromArgs("上下反転２") != "") Then
	UD_OPT2 = "上下反転"
EndIf
Local LR_OPT2 = ""
If (_SearchOptionFromArgs("左右反転２") != "") Then
	LR_OPT2 = "左右反転"
Endif
If ((DRCT2 != "") And (LR_OPT2 != "")) Then
  Set DRCT2 ""
ElseIf (LR_OPT != "") Then
  Set DRCT2 LR_OPT2
EndIf


If (_SearchOptionFromArgs("中間") != "") Then
  G_X = (((WX(対象ユニットＩＤ) + WX(相手ユニットＩＤ)) * 0.5) + 16)
  G_Y = (((WY(対象ユニットＩＤ) + WY(相手ユニットＩＤ)) * 0.5) + 16)
EndIf

Local G_X2 = G_X
LOcal G_Y2 = G_Y

Incr G_X (G_SX * -0.5)
Incr G_X2 (G_SX2 * -0.5)

Switch POS
Case "上辺"
  Incr G_Y -16
Case "下辺"
  Incr G_Y ((G_SY * -1) + 16)
Case Else
  Incr G_Y (G_SY * -0.5)
EndSw

If (_SearchOptionFromArgs("上辺２") != "") Then
  Incr G_Y2 -16
elseIf (_SearchOptionFromArgs("下辺２") != "") Then
  Incr G_Y2 ((G_SY2 * -1) + 16)
Else
  Incr G_Y2 (G_SY2 * -0.5)
EndIf

# 角度設定

If (_SearchOptionFromArgs("発射") != "") Then
  ANG = _GetAngle(対象ユニットＩＤ)
EndIf

Local ANG2 = ANG

ANG = ANG + _GetOptValueFromArgs("角度")
ANG2 = ANG2 + _GetOptValueFromArgs("角度２")

If (DRCT = "左右反転") Then
	ANG = ANG * -1
	ANG2 = ANG2 * -1
EndIf



# 先に二枚目ファイル画像情報取得
_GBA_GetBmpPatternInfo _G_APTN_FA(Args(3)) _GetName(_GetWavFromArgs(),_GetOptParamsFromArgs("連続効果音"))
# ２枚目の情報を保存
Local _GBA_P_NAME2 = _GBA_P_NAME
Local _GBA_P_STR2 = _GBA_P_STR
Local _GBA_P_END2 = _GBA_P_END
Local _GBA_P_TYPE2 = _GBA_P_TYPE
Local _GBA_P_FRC2 = _GBA_P_FRC
Local _GBA_P_TTL2 = _GBA_P_TTL

# 一枚目情報取得
_GBA_GetBmpPatternInfo _G_APTN_FA(Args(1)) _GetName(_GetWavFromArgs(),_GetOptParamsFromArgs("連続効果音"))

Set W_T (Args(5) / _GBA_P_TTL)

#_GetNumberFromArgs(Args(4))

For j = 1 To _GetNumberFromArgs(Args(6))

If (_SearchOptionFromArgs("ランダム") != "") Then
  ANG = random(360)
EndIf
If (_SearchOptionFromArgs("ランダム２") != "") Then
  ANG2 = random(360)
EndIf

Set k 0

Wait Start
	For i = 1 To _GBA_P_TTL
	
	if i > _GBA_P_TTL2 Then
	else
		Incr k 1
	Endif
	
	  _CheckPlaySound _GBA_P_WAV[i]
	  ClearPicture
	  If (B_FLG = "背面") Then
	    PaintPicture _SetBmpNum2(_GBA_P_NAME2,(_GBA_P_STR2 + ((k - 1) * _GBA_P_FRC2)),_GBA_P_TYPE2) _
	                 G_X2 G_Y2 G_SX2 G_SY2 DRCT2 透過 T_COL_F UD_OPT2 LR_OPT2 右回転 ANG2
	    PaintPicture _SetBmpNum2(_GBA_P_NAME,(_GBA_P_STR + ((i - 1) * _GBA_P_FRC)),_GBA_P_TYPE) _
	                 G_X G_Y G_SX G_SY DRCT 透過 T_COL_F UD_OPT LR_OPT 右回転 ANG
	    PaintPicture BMP_FILE C_X C_Y 32 32 透過 T_COL
	  Else
	    PaintPicture _SetBmpNum2(_GBA_P_NAME2,(_GBA_P_STR2 + ((k - 1) * _GBA_P_FRC2)),_GBA_P_TYPE2) _
	                 G_X2 G_Y2 G_SX2 G_SY2 DRCT2 透過 T_COL_F UD_OPT2 LR_OPT2 右回転 ANG2
	    PaintPicture _SetBmpNum2(_GBA_P_NAME,(_GBA_P_STR + ((i - 1) * _GBA_P_FRC)),_GBA_P_TYPE) _
	                 G_X G_Y G_SX G_SY DRCT 透過 T_COL_F UD_OPT LR_OPT 右回転 ANG
	  EndIf
	  Refresh
	  Wait Until (i * W_T)
	Next
Next

_GBA_UnSetBmpPattern


If (_S_OPT_FA("保持") = "保持") Then
  Return "Keep"
Else
  Return
EndIf


#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/



戦闘アニメ_LOLIP_高速準備準備:
戦闘アニメ_LOLIP_高速準備攻撃:
戦闘アニメ_LOLIP_高速準備命中:

# 引数 待機=(整数) 武器を構えた後のWait
# 他、振る武器準備と同様

UpVar

Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
_CenteringCheck UID
Local C_X = WX(UID)
Local C_Y = WY(UID)
Local WP_FILE = _GetBmpFromArgs()
Local G_S = _GetPicSizeFromArgs()
Local X_P
Local T_COL_F = _ColorTime(_IsLight())
Local WA = _GetOptValueFromArgs("待機")

Set X_P (16 - (G_S \ 2))
Incr C_Y (32 - G_S)

_SelectSound "-.wav" _GetWavFromArgs()

If (_IsDoubleWeapon() = 1) Then
  Wait Start
  ClearPicture
  PaintPicture WP_FILE (C_X - 12 + X_P) (C_Y + 4) G_S G_S 透過 T_COL_F
  PaintPicture WP_FILE (C_X + 12 + X_P) (C_Y + 4) G_S G_S 透過 左右反転 T_COL_F
  Refresh
  Wait Until 1
  ClearPicture
  PaintPicture WP_FILE (C_X - 20 + X_P) (C_Y - 4) G_S G_S 透過 T_COL_F
  PaintPicture WP_FILE (C_X + 20 + X_P) (C_Y - 4) G_S G_S 透過 左右反転 T_COL_F
  Refresh
  Wait Until 2
  ClearPicture
  PaintPicture WP_FILE (C_X - 16 + X_P) C_Y G_S G_S 透過 T_COL_F
  PaintPicture WP_FILE (C_X + 16 + X_P) C_Y G_S G_S 透過 左右反転 T_COL_F
  Refresh
  Wait Until 3.5
Else
  If (X(UID) >= _Get_X(相手ユニットＩＤ)) Then
    Wait Start
    ClearPicture
    PaintPicture WP_FILE (C_X - 12 + X_P) (C_Y + 4) G_S G_S 透過 T_COL_F
    Refresh
    Wait Until 1
    ClearPicture
    PaintPicture WP_FILE (C_X - 20 + X_P) (C_Y - 4) G_S G_S 透過 T_COL_F
    Refresh
    Wait Until 2
    ClearPicture
    PaintPicture WP_FILE (C_X - 16 + X_P) C_Y G_S G_S 透過 T_COL_F
    Refresh
    Wait Until 3.5
  Else
    Wait Start
    ClearPicture
    PaintPicture WP_FILE (C_X + 12 + X_P) (C_Y + 4) G_S G_S 透過 左右反転 T_COL_F
    Refresh
    Wait Until 1
    ClearPicture
    PaintPicture WP_FILE (C_X + 20 + X_P) (C_Y - 4) G_S G_S 透過 左右反転 T_COL_F
    Refresh
    Wait Until 2
    ClearPicture
    PaintPicture WP_FILE (C_X + 16 + X_P) C_Y G_S G_S 透過 左右反転 T_COL_F
    Refresh
    Wait Until 3.5
  EndIf
EndIf

Wait Until WA

Return "Keep"



#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


戦闘アニメ_LOLIP_頭上攻撃命中:
# 引数 効果音
# 引数 浮き
# 引数 相手タイル
# 引数 速 遅
# 引数 角度 (対象ユニットを右回転させる角度)


Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
_CenteringCheck UID
Local C_X = WX(UID)
Local C_Y = WY(UID)
Local C_X2 = WX(UID)
Local C_Y2 = WY(UID)

Local BMP_FILE = _GetBMPName(UID)
Local BMP_FILE2 = _GetTileName(UID)
Local BMP_FILE3 = _GetBMPName(相手ユニットＩＤ)
Local BMP_FILE4 = _GetTileName(相手ユニットＩＤ)
Local A_X = WX(相手ユニットＩＤ)
Local A_Y = WY(相手ユニットＩＤ)
Local HITH
Local ANGC = _GetName(0,_GetNumberFromArgs())

# 相手の浮き
If (_SearchOptionFromArgs("浮き") != "") Then
  Set HITH 2
Else
  Set HITH 1
EndIf

If (_SearchOptionFromArgs("相手タイル") != "") Then
  Set C_X A_X
  Set C_Y A_Y
EndIf

Local SPEED = 1

If (_SearchOptionFromArgs("遅") != "") Then
  Set SPEED 1.5
ElseIf (_SearchOptionFromArgs("速") != "") Then
  Set SPEED 0.5
EndIf

Wait Start

ChangeUnitBitmap UID 非表示
ChangeUnitBitmap 相手ユニットＩＤ 非表示


    ClearPicture
    _PaintTile BMP_FILE2 C_X2 C_Y2
    _PaintTile BMP_FILE4 A_X A_Y

      Wait Start
      PaintPicture BMP_FILE C_X C_Y 透過 右回転 ANGC _ColorTime()
      PaintPicture BMP_FILE3 C_X (C_Y - 16) 透過 右回転 90 _ColorTime()
      Refresh
      Wait Until 0.8
     ClearPicture
    _PaintTile BMP_FILE2 C_X2 C_Y2
    _PaintTile BMP_FILE4 A_X A_Y

      Wait Start
      PaintPicture BMP_FILE C_X (C_Y - 4) 透過 右回転 ANGC _ColorTime()
      PaintPicture BMP_FILE3 C_X (C_Y - 24) 透過 右回転 90 _ColorTime()
      PaintPicture "Hit\EFFECT_HIT01.bmp" (C_X + 4) (C_Y - 16) 24 24 透過 _ColorTime()
      _SelectSound "BreakOff.wav" _GetWavFromArgs()
      Refresh
      Wait Until SPEED
     ClearPicture
    _PaintTile BMP_FILE2 C_X2 C_Y2
    _PaintTile BMP_FILE4 A_X A_Y
      
      Wait Start
      PaintPicture BMP_FILE C_X C_Y 透過 右回転 ANGC _ColorTime()
      PaintPicture BMP_FILE3 C_X (C_Y - (16 * HITH)) 透過 右回転 90 _ColorTime()
      PaintPicture "Hit\EFFECT_HIT01.bmp" C_X (C_Y - 16) 透過 _ColorTime()
      Refresh
      Wait Until SPEED

ChangeUnitBitmap UID 非表示解除
ChangeUnitBitmap 相手ユニットＩＤ 非表示解除

ClearPicture
Refresh
Return



#_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/


戦闘アニメ_LOLIP_逆回転準備:
戦闘アニメ_LOLIP_逆回転攻撃:
戦闘アニメ_LOLIP_逆回転命中:
# 敵との位置関係で回転方向とアイコンの向きが変化するようにした。
# 他引数は「回転」に準じる
# 引数 高速
# 引数 普通の回転と同方向に回転 (正)

Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
_CenteringCheck UID

Local i j
Local BMP_FILE = _GetBMPName(UID)
Local TILE_FILE = _GetTileName(UID)
Local C_X = WX(UID)
Local C_Y = WY(UID)
Local ANG = 0
Local DRCT
Local DRC
Local S_F = _GetName("Swing.wav",_GetWavFromArgs())
Local CNT = _GetNumberFromArgs()
Local SPEED = 1

If (_SearchOptionFromArgs("遅") != "") Then
  Set SPEED 1.5
ElseIf (_SearchOptionFromArgs("速") != "") Then
  Set SPEED 0.7
ElseIf (_SearchOptionFromArgs("高速") != "") Then
  Set SPEED 0.3
EndIf

Set DRCT -60
If (_SearchOptionFromArgs("正") != "") Then
  Set DRCT 60
EndIf


Set DRC ""
If (X(UID) < _Get_X(相手ユニットＩＤ)) Then
  Set DRC 左右反転
  Set DRCT (DRCT * -1)
EndIf

ChangeUnitBitmap UID 非表示

If (CNT < 1) Then
  For i = 1 To 12
    If ((i Mod 3) = 0) Then
      PlaySound S_F
    EndIf
    ClearPicture
    _PaintTile TILE_FILE C_X C_Y
    PaintPicture BMP_FILE C_X (C_Y - i) 透過 左回転 ANG DRC _ColorTime()
    Refresh
    Wait (((10 - (i \ 6)) * 0.1) * SPEED)
    Incr ANG DRCT
  Next

  For j = 1 To 3
    Wait Start
    For i = 1 To 6
      If ((i Mod 3) = 0) Then
        PlaySound S_F
      EndIf
      ClearPicture
      If (TILE_FILE != "") Then
        PaintPicture TILE_FILE C_X C_Y _ColorTime()
      EndIf
      PaintPicture BMP_FILE C_X (C_Y - 12) 透過 左回転 ANG DRC _ColorTime()
      Refresh
      Wait Until ((i * (9 - j) * 0.1) * SPEED)
      Incr ANG DRCT
    Next
  Next
Else
  For j = 1 To CNT
    PlaySound S_F
    Wait Start
    For i = 1 To 6
      ClearPicture
      If (TILE_FILE != "") Then
        PaintPicture TILE_FILE C_X C_Y _ColorTime()
      EndIf
      PaintPicture BMP_FILE C_X C_Y 透過 左回転 ANG DRC _ColorTime()
      Refresh
      Wait Until (i * SPEED)
      Incr ANG DRCT
    Next
  Next
EndIf

ChangeUnitBitmap UID 非表示解除
ClearPicture
Refresh
Return

