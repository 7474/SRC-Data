# テキスト環境
# tab=半角スペース4 フォント=MS ゴシック

#背景画像を使用している場合、
#
#Set 背景変更制限
#背景変更制限 = 1
#
#この二つの行をeveファイルのどこかに追加してください。
#これをしないと、アニメーション側のエフェクトで背景画像を上書きしてしまいます。
#動作的には、NightやSunset等の背景画像を上書きするエフェクトを、
#変数セットで殺しているだけです。

#マップコマンド "開始スペルアニメ設定[OFF]" (EPS_OpenSpell = 0):
#マップコマンド "開始スペルアニメ設定[ON]" EPS_OpenSpell:

# 変数EPS_OpenSpellが0ならば上、1ならば下のコマンドが表示される。

#Global EPS_OpenSpell
#Global EPS_OpenSpell2
#Confirm 開始スペル設定をONにしますか？(キャンセルはOff)
#Switch 選択
#Case 0
#Set EPS_OpenSpell 0
#Case 1
#Set EPS_OpenSpell 1
#EndSw
#Confirm 敵の設定をONにしますか？(キャンセルはOff)
#Switch 選択
#Case 0
#Set EPS_OpenSpell2 0
#Case 1
#Set EPS_OpenSpell2 1
#EndSw
#Exit

##### ------------------------------ 汎用 ------------------------------ #####

東方画面色変更:
	If 背景変更制限 = 1 Then
		Return
	Else
		Switch Args(1)
		Case Noon
			Noon
		Case Night
			Night
		Case Sepia
			Sepia
		Case Sunset
			Sunset
		Case Water
			Water
		Case Monotone
			Monotone
			ClearPicture
			Refresh
		EndSw
	EndIf
Return

東方画面色フィルター:
	If 背景変更制限 = 1 Then
		Return
	ElseIf ((LIndex(Args(1),1)) Like "[#]*") = 1 Then
		ColorFilter LIndex(Args(1),1) LIndex(Args(1),2)
	Else
		Switch Args(1)
		Case 昼
			Noon
		Case "昼 マップ限定"
			Noon マップ限定
		Case 夜
			Night
		Case "夜 マップ限定"
			Night マップ限定
		Case セピア
			Sepia
		Case "セピア マップ限定"
			Sepia マップ限定
		Case 夕焼け
			Sunset
		Case "夕焼け マップ限定"
			Sunset マップ限定
		Case 水中
			Water
		Case "水中 マップ限定"
			Water マップ限定
		Case 白黒
			Monotone
		Case "白黒 マップ限定"
			Monotone マップ限定
			ClearPicture
			Refresh
		EndSw
	EndIf
Return

東方ホワイトイン:
	PlaySound Args(2)
	WhiteIn Args(1)
	ClearPicture
	Refresh
Return

東方ホワイトアウト:
	PlaySound Args(2)
#	WhiteOut Args(1)
	ClearPicture
	Refresh
Return

東方超発光:
	Local a b c d
	Center 対象ユニットＩＤ
	PlaySound Charge(High).wav
	For i = 0 to 30
		ClearPicture 0 0 480 480
		Set a Random(480)
		Set b Random(480)
		Set c Random(480)
		Set d Random(480)
		FillStyle 塗りつぶし
		FillColor RGB(255,255,255)
		Color RGB(255,255,0)
		DrawWidth 3
		Polygon 240 240 a 0 (a + 50) 0
		Polygon 240 240 b 480 (b + 50) 480
		Polygon 240 240 0 c 0 (c + 50)
		Polygon 240 240 480 d 480 (d + 50)
		Polygon 240 240 c 0 (c - Random(100)) 0
		Polygon 240 240 d 480 (d - Random(100)) 480
		Polygon 240 240 0 a 0 (a - Random(100))
		Polygon 240 240 480 b 480 (b - Random(100))
		Circle 240 240 5
		Refresh
		Wait 0.3
	Next
	ClearPicture
	Refresh
Return

東方円月殺法エフェクト:
	Local i
	Local C_X
	Local C_Y
	Local B_C
	Local ANG
	Local DRCT
	Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())

	_UnSetBattleAnimeValue

	_CenteringCheck UID
	Set C_X (WX(UID) - 16)
	Set C_Y (WY(UID) - 16)
	Set B_C _GetName("(Pink)",_GetBeamColor(_GetColorFromArgs()))

	If (X(UID) >= _Get_X(相手ユニットＩＤ)) Then
		Set DRCT 左右反転
		Set ANG (ANG * -1)
	Else
		Set DRCT ""
	EndIf

	Wait Start
	_SelectSound "Charge(Long).wav" _GetWavFromArgs()
	For i = 1 To 17 
		ClearPicture
		PaintPicture _SetBMPNum(("Attack\EFFECT_CircleExcursion" & B_C),i) C_X C_Y 64 64 透過 右回転 ANG DRCT _ColorTime(1)
		Refresh
		Wait Until (i * 0.8)
	Next

	Set 戦闘アニメ変数[色] B_C
Return

東方投げナイフ:
#引数１ 本数
#引数２ 効果音
#引数３ 発射速度
#引数４ 色　赤青緑黄のみ　省略時は青
	Local i
	Local CNT = _GetNumberFromArgs()
	Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
	Local T_SPD = _GetSpeedFromArgs()
	Local COL = _GetName("(Blue)",_GetBeamColor(_GetColorFromArgs()))
	Call 戦闘アニメ_投擲武器攻撃 ("Anime\EFFECT_ThrowKnife0" & CNT & COL & ".bmp") _
		32 _GetName("Bow.wav",_GetWavFromArgs()) UID T_SPD
Return

東方投げナイフ命中:
#色は赤青緑黄のみ
	Local i
	Local BMP_FILE
	Local BMP_FILE2
	Local EFFECT_FILE
	Local ANG
	Local X_F
	Local Y_F
	Local A_X
	Local A_Y
	Local LN
	Local C_X
	Local C_Y
	Local DRCT

	_CenteringCheck 相手ユニットＩＤ
	Set C_X WX(相手ユニットＩＤ)
	Set C_Y WY(相手ユニットＩＤ)

	Set BMP_FILE _GetBMPName(相手ユニットＩＤ)
	Set BMP_FILE2 _GetTileName(相手ユニットＩＤ)

	Set EFFECT_FILE ("Anime\EFFECT_ThrowKnife01" & _GetName("(Blue)",_GetBeamColor(_GetColorFromArgs())) & ".bmp")

	Set ANG _GetAngle(_GetName(対象ユニットＩＤ,_GetIDFromArgs() ))

	Set X_F _GetCircumference(ANG,Ｘ)
	Set Y_F _GetCircumference(ANG,Ｙ)
	Set DRCT _FlipVertical(ANG)

	Wait Start
	If (BMP_FILE2 = "") Then
		ChangeUnitBitmap 相手ユニットＩＤ 非表示
	EndIf
	For i = 1 To 7
		ClearPicture
		If (BMP_FILE2 != "") Then
			PaintPicture BMP_FILE2 C_X C_Y _ColorTime()
		EndIf
		Switch i
		Case 1
			Set LN -24
			PaintPicture BMP_FILE C_X C_Y 透過 _ColorTime()
		Case 2
			Set LN -12
			PaintPicture BMP_FILE C_X C_Y 透過 _ColorTime()
		Case 3
			Set LN 0
			PaintPicture BMP_FILE C_X C_Y 透過 _ColorTime()
			_SelectSound "Stab.wav" _GetWavFromArgs()
		Case 4
			Set LN 4
			PaintPicture BMP_FILE (C_X + (X_F * 2)) (C_Y + (Y_F * 2)) 透過 _ColorTime()
		Case 5
			Set LN 8
			PaintPicture BMP_FILE (C_X + (X_F * 4)) (C_Y + (Y_F * 4)) 透過 _ColorTime()
		Case 6
			Set LN 24
			PaintPicture BMP_FILE (C_X + (X_F * 12)) (C_Y + (Y_F * 12)) 透過 _ColorTime()
		Case 7
			Set LN 40
			PaintPicture BMP_FILE (C_X + (X_F * 16)) (C_Y + (Y_F * 16)) 透過 _ColorTime()
		EndSw
		PaintPicture EFFECT_FILE (C_X + (X_F * (LN + 8))) (C_Y + (Y_F * (LN + 8))) 透過 DRCT 右回転 ANG _ColorTime(1)
		Refresh
		Wait Until (i * 0.6)
	Next
	If (BMP_FILE2 = "") Then
		ChangeUnitBitmap 相手ユニットＩＤ 非表示解除
	EndIf
	ClearPicture
	Refresh
Return

蝶弾攻撃:
	Local i
	Local CNT = _GetNumberFromArgs()
	Local COL = _GetName("(Blue)",_GetBeamColor(_GetColorFromArgs()))
	Call 戦闘アニメ_実弾発射攻撃 ("Anime\EFFECT_EPS_ButteflyShot" & COL & "0" & CNT & ".bmp") 32 Drill(2).wav 発光 遅 残像
Return

ＭＡＰ蝶弾攻撃:
	Local COL = _GetName("(Blue)",_GetBeamColor(_GetColorFromArgs()))
	Call 戦闘アニメ_ＭＡＰ実弾発射攻撃 ("Anime\EFFECT_EPS_ButteflyShot" & COL & "04.bmp") 32 _GetName("Drill(2).wav",_GetWavFromArgs())
Return

##### ------------------------------ 博麗霊夢 ------------------------------ #####

二重結界:
	Center 相手ユニットＩＤ
	DrawWidth 2
	PlaySound Args(1)
	Color RGB(255,0,0)
	For i = 0 to 40
		ClearPicture 0 0 480 480
		Refresh
		FillStyle 塗りつぶし
		FillColor RGB(255,150,200)
		Polygon (240 - (200 - (i * 2.5)) * Cos(i / (-6.35))) (240 - (200 - (i * 2.5)) * Sin(i / (-6.35))) _
			(240 - (200 - (i * 2.5)) * Cos((i + 10) / (-6.35))) (240 - (200 - (i * 2.5)) * Sin((i + 10) / (-6.35))) _
			(240 - (200 - (i * 2.5)) * Cos((i + 20) / (-6.35))) (240 - (200 - (i * 2.5)) * Sin((i + 20) / (-6.35))) _
			(240 - (200 - (i * 2.5)) * Cos((i + 30) / (-6.35))) (240 - (200 - (i * 2.5)) * Sin((i + 30) / (-6.35)))
		Polygon (240 - (2 * i) * Cos(i / 6.35)) (240 - (i * 2) * Sin(i / 6.35)) _
			(240 - (i * 2) * Cos((i + 10) / 6.35)) (240 - (i * 2) * Sin((i + 10) / 6.35)) _
			(240 - (i * 2) * Cos((i + 20) / 6.35)) (240 - (i * 2) * Sin((i + 20) / 6.35)) _
			(240 - (i * 2) * Cos((i + 30) / 6.35)) (240 - (i * 2) * Sin((i + 30) / 6.35))
		FillStyle 透明
		Polygon (240 - 90 * Cos(5 / 6.35)) (240 - 90 * Sin(5 / 6.35)) (240 - 90 * Cos(15 / 6.35)) (240 - 90 * Sin(15 / 6.35)) _
			(240 - 90 * Cos(25 / 6.35)) (240 - 90 * Sin(25 / 6.35)) (240 - 90 * Cos(35 / 6.35)) (240 - 90 * Sin(35 / 6.35))
		Polygon (240 - 50 * Cos(2.5 / 6.35)) (240 - 50 * Sin(2.5 / 6.35)) (240 - 50 * Cos(7.5 / 6.35)) (240 - 50 * Sin(7.5 / 6.35)) _
			(240 - 50 * Cos(12.5 / 6.35)) (240 - 50 * Sin(12.5 / 6.35)) (240 - 50 * Cos(17.5 / 6.35)) (240 - 50 * Sin(17.5 / 6.35)) _
			(240 - 50 * Cos(22.5 / 6.35)) (240 - 50 * Sin(22.5 / 6.35)) (240 - 50 * Cos(27.5 / 6.35)) (240 - 50 * Sin(27.5 / 6.35)) _
			(240 - 50 * Cos(32.5 / 6.35)) (240 - 50 * Sin(32.5 / 6.35)) (240 - 50 * Cos(37.5 / 6.35)) (240 - 50 * Sin(37.5 / 6.35))
		Polygon (240 - 40 * Cos(2.5 / 6.35)) (240 - 40 * Sin(2.5 / 6.35)) (240 - 40 * Cos(7.5 / 6.35)) (240 - 40 * Sin(7.5 / 6.35)) _
			(240 - 40 * Cos(12.5 / 6.35)) (240 - 40 * Sin(12.5 / 6.35)) (240 - 40 * Cos(17.5 / 6.35)) (240 - 40 * Sin(17.5 / 6.35)) _
			(240 - 40 * Cos(22.5 / 6.35)) (240 - 40 * Sin(22.5 / 6.35)) (240 - 40 * Cos(27.5 / 6.35)) (240 - 40 * Sin(27.5 / 6.35)) _
			(240 - 40 * Cos(32.5 / 6.35)) (240 - 40 * Sin(32.5 / 6.35)) (240 - 40 * Cos(37.5 / 6.35)) (240 - 40 * Sin(37.5 / 6.35))
		Polygon (240 - 30 * Cos(2.5 / 6.35)) (240 - 30 * Sin(2.5 / 6.35)) (240 - 30 * Cos(7.5 / 6.35)) (240 - 30 * Sin(7.5 / 6.35)) _
			(240 - 30 * Cos(12.5 / 6.35)) (240 - 30 * Sin(12.5 / 6.35)) (240 - 30 * Cos(17.5 / 6.35)) (240 - 30 * Sin(17.5 / 6.35)) _
			(240 - 30 * Cos(22.5 / 6.35)) (240 - 30 * Sin(22.5 / 6.35)) (240 - 30 * Cos(27.5 / 6.35)) (240 - 30 * Sin(27.5 / 6.35)) _
			(240 - 30 * Cos(32.5 / 6.35)) (240 - 30 * Sin(32.5 / 6.35)) (240 - 30 * Cos(37.5 / 6.35)) (240 - 30 * Sin(37.5 / 6.35))
		Polygon (240 - 20 * Cos(2.5 / 6.35)) (240 - 20 * Sin(2.5 / 6.35)) (240 - 20 * Cos(7.5 / 6.35)) (240 - 20 * Sin(7.5 / 6.35)) _
			(240 - 20 * Cos(12.5 / 6.35)) (240 - 20 * Sin(12.5 / 6.35)) (240 - 20 * Cos(17.5 / 6.35)) (240 - 20 * Sin(17.5 / 6.35)) _
			(240 - 20 * Cos(22.5 / 6.35)) (240 - 20 * Sin(22.5 / 6.35)) (240 - 20 * Cos(27.5 / 6.35)) (240 - 20 * Sin(27.5 / 6.35)) _
			(240 - 20 * Cos(32.5 / 6.35)) (240 - 20 * Sin(32.5 / 6.35)) (240 - 20 * Cos(37.5 / 6.35)) (240 - 20 * Sin(37.5 / 6.35))
		Line (240 - 20 * Cos(2.5 / 6.35)) (240 - 20 * Sin(2.5 / 6.35)) (240 - 69 * Cos(2.5 / 6.35)) (240 - 69 * Sin(2.5 / 6.35))
		Line (240 - 20 * Cos(7.5 / 6.35)) (240 - 20 * Sin(7.5 / 6.35)) (240 - 69 * Cos(7.5 / 6.35)) (240 - 69 * Sin(7.5 / 6.35))
		Line (240 - 20 * Cos(12.5 / 6.35)) (240 - 20 * Sin(12.5 / 6.35)) (240 - 69 * Cos(12.5 / 6.35)) (240 - 69 * Sin(12.5 / 6.35))
		Line (240 - 20 * Cos(17.5 / 6.35)) (240 - 20 * Sin(17.5 / 6.35)) (240 - 69 * Cos(17.5 / 6.35)) (240 - 69 * Sin(17.5 / 6.35))
		Line (240 - 20 * Cos(22.5 / 6.35)) (240 - 20 * Sin(22.5 / 6.35)) (240 - 69 * Cos(22.5 / 6.35)) (240 - 69 * Sin(22.5 / 6.35))
		Line (240 - 20 * Cos(27.5 / 6.35)) (240 - 20 * Sin(27.5 / 6.35)) (240 - 69 * Cos(27.5 / 6.35)) (240 - 69 * Sin(27.5 / 6.35))
		Line (240 - 20 * Cos(32.5 / 6.35)) (240 - 20 * Sin(32.5 / 6.35)) (240 - 69 * Cos(32.5 / 6.35)) (240 - 69 * Sin(32.5 / 6.35))
		Line (240 - 20 * Cos(37.5 / 6.35)) (240 - 20 * Sin(37.5 / 6.35)) (240 - 69 * Cos(37.5 / 6.35)) (240 - 69 * Sin(37.5 / 6.35))
		Refresh
		Wait 0.2
	Next
	PlaySound Args(2)
	For i = 0 to 40
		ClearPicture 0 0 480 480
		Refresh
		FillStyle 塗りつぶし
		Polygon (240 - 100 * Cos(i / (-6.35))) (240 - 100 * Sin(i / (-6.35))) _
			(240 - 100 * Cos((i + 10) / (-6.35))) (240 - 100 * Sin((i + 10) / (-6.35))) _
			(240 - 100 * Cos((i + 20) / (-6.35))) (240 - 100 * Sin((i + 20) / (-6.35))) _
			(240 - 100 * Cos((i + 30) / (-6.35))) (240 - 100 * Sin((i + 30) / (-6.35)))
		Polygon (240 - 80 * Cos(i / 6.35)) (240 - 80 * Sin(i / 6.35)) _
			(240 - 80 * Cos((i + 10) / 6.35)) (240 - 80 * Sin((i + 10) / 6.35)) _
			(240 - 80 * Cos((i + 20) / 6.35)) (240 - 80 * Sin((i + 20) / 6.35)) _
			(240 - 80 * Cos((i + 30) / 6.35)) (240 - 80 * Sin((i + 30) / 6.35))
		FillStyle 透明
		Polygon (240 - 90 * Cos(5 / 6.35)) (240 - 90 * Sin(5 / 6.35)) (240 - 90 * Cos(15 / 6.35)) (240 - 90 * Sin(15 / 6.35)) _
			(240 - 90 * Cos(25 / 6.35)) (240 - 90 * Sin(25 / 6.35)) (240 - 90 * Cos(35 / 6.35)) (240 - 90 * Sin(35 / 6.35))
		Polygon (240 - 50 * Cos(2.5 / 6.35)) (240 - 50 * Sin(2.5 / 6.35)) (240 - 50 * Cos(7.5 / 6.35)) (240 - 50 * Sin(7.5 / 6.35)) _
			(240 - 50 * Cos(12.5 / 6.35)) (240 - 50 * Sin(12.5 / 6.35)) (240 - 50 * Cos(17.5 / 6.35)) (240 - 50 * Sin(17.5 / 6.35)) _
			(240 - 50 * Cos(22.5 / 6.35)) (240 - 50 * Sin(22.5 / 6.35)) (240 - 50 * Cos(27.5 / 6.35)) (240 - 50 * Sin(27.5 / 6.35)) _
			(240 - 50 * Cos(32.5 / 6.35)) (240 - 50 * Sin(32.5 / 6.35)) (240 - 50 * Cos(37.5 / 6.35)) (240 - 50 * Sin(37.5 / 6.35))
		Polygon (240 - 40 * Cos(2.5 / 6.35)) (240 - 40 * Sin(2.5 / 6.35)) (240 - 40 * Cos(7.5 / 6.35)) (240 - 40 * Sin(7.5 / 6.35)) _
			(240 - 40 * Cos(12.5 / 6.35)) (240 - 40 * Sin(12.5 / 6.35)) (240 - 40 * Cos(17.5 / 6.35)) (240 - 40 * Sin(17.5 / 6.35)) _
			(240 - 40 * Cos(22.5 / 6.35)) (240 - 40 * Sin(22.5 / 6.35)) (240 - 40 * Cos(27.5 / 6.35)) (240 - 40 * Sin(27.5 / 6.35)) _
			(240 - 40 * Cos(32.5 / 6.35)) (240 - 40 * Sin(32.5 / 6.35)) (240 - 40 * Cos(37.5 / 6.35)) (240 - 40 * Sin(37.5 / 6.35))
		Polygon (240 - 30 * Cos(2.5 / 6.35)) (240 - 30 * Sin(2.5 / 6.35)) (240 - 30 * Cos(7.5 / 6.35)) (240 - 30 * Sin(7.5 / 6.35)) _
			(240 - 30 * Cos(12.5 / 6.35)) (240 - 30 * Sin(12.5 / 6.35)) (240 - 30 * Cos(17.5 / 6.35)) (240 - 30 * Sin(17.5 / 6.35)) _
			(240 - 30 * Cos(22.5 / 6.35)) (240 - 30 * Sin(22.5 / 6.35)) (240 - 30 * Cos(27.5 / 6.35)) (240 - 30 * Sin(27.5 / 6.35)) _
			(240 - 30 * Cos(32.5 / 6.35)) (240 - 30 * Sin(32.5 / 6.35)) (240 - 30 * Cos(37.5 / 6.35)) (240 - 30 * Sin(37.5 / 6.35))
		Polygon (240 - 20 * Cos(2.5 / 6.35)) (240 - 20 * Sin(2.5 / 6.35)) (240 - 20 * Cos(7.5 / 6.35)) (240 - 20 * Sin(7.5 / 6.35)) _
			(240 - 20 * Cos(12.5 / 6.35)) (240 - 20 * Sin(12.5 / 6.35)) (240 - 20 * Cos(17.5 / 6.35)) (240 - 20 * Sin(17.5 / 6.35)) _
			(240 - 20 * Cos(22.5 / 6.35)) (240 - 20 * Sin(22.5 / 6.35)) (240 - 20 * Cos(27.5 / 6.35)) (240 - 20 * Sin(27.5 / 6.35)) _
			(240 - 20 * Cos(32.5 / 6.35)) (240 - 20 * Sin(32.5 / 6.35)) (240 - 20 * Cos(37.5 / 6.35)) (240 - 20 * Sin(37.5 / 6.35))
		Line (240 - 20 * Cos(2.5 / 6.35)) (240 - 20 * Sin(2.5 / 6.35)) (240 - 69 * Cos(2.5 / 6.35)) (240 - 69 * Sin(2.5 / 6.35))
		Line (240 - 20 * Cos(7.5 / 6.35)) (240 - 20 * Sin(7.5 / 6.35)) (240 - 69 * Cos(7.5 / 6.35)) (240 - 69 * Sin(7.5 / 6.35))
		Line (240 - 20 * Cos(12.5 / 6.35)) (240 - 20 * Sin(12.5 / 6.35)) (240 - 69 * Cos(12.5 / 6.35)) (240 - 69 * Sin(12.5 / 6.35))
		Line (240 - 20 * Cos(17.5 / 6.35)) (240 - 20 * Sin(17.5 / 6.35)) (240 - 69 * Cos(17.5 / 6.35)) (240 - 69 * Sin(17.5 / 6.35))
		Line (240 - 20 * Cos(22.5 / 6.35)) (240 - 20 * Sin(22.5 / 6.35)) (240 - 69 * Cos(22.5 / 6.35)) (240 - 69 * Sin(22.5 / 6.35))
		Line (240 - 20 * Cos(27.5 / 6.35)) (240 - 20 * Sin(27.5 / 6.35)) (240 - 69 * Cos(27.5 / 6.35)) (240 - 69 * Sin(27.5 / 6.35))
		Line (240 - 20 * Cos(32.5 / 6.35)) (240 - 20 * Sin(32.5 / 6.35)) (240 - 69 * Cos(32.5 / 6.35)) (240 - 69 * Sin(32.5 / 6.35))
		Line (240 - 20 * Cos(37.5 / 6.35)) (240 - 20 * Sin(37.5 / 6.35)) (240 - 69 * Cos(37.5 / 6.35)) (240 - 69 * Sin(37.5 / 6.35))
		Refresh
		Wait (0.3 - (i / 200))
	Next
#	WhiteOut 5
	ClearPicture
	Refresh
Return

封魔陣:
	Center 対象ユニットＩＤ
	DrawWidth 1
	FillStyle 塗りつぶし
	FillColor RGB(255,255,255)
	PlaySound Args(1)
	For i = 0 to 30
		ClearPicture 0 0 480 480
		Refresh
		Line 210 (180 - i * 6) 270 (300 + i * 6) RGB(255,0,0) B
		Line (180 - i * 6) 210 (300 + i * 6) 270 RGB(255,0,0) B
		Refresh
		Wait 0.2
	Next
	For i = 0 to 30
		ClearPicture 0 0 480 480
		Refresh
		Line (210 - i * 7) 0 (270 + i * 7) 480 RGB(255,0,0) B
		Line 0 (210 - i * 7) 480 (300 + i * 7) RGB(255,0,0) B
		Refresh
		Wait 0.4
	Next
	ClearPicture
	Refresh
Return

夢想封印:
	Local i
	Local lSound1 = "Charge(High).wav"
	Local lSound2 = "-.wav"
	# Sound指定がある場合にのせかえ
	If 0 < ArgNum Then
		lSound = Args(1)
		If 1 < ArgNum Then
			lSound2 = Args(2)
		EndIf
	EndIf
	Center 対象ユニットＩＤ
	PlaySound lSound1
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(Yellow)03.bmp ((208 + 120) - 120 * Cos(i / 14)) (208 + (-120) * Sin(i / 14)) 64 64 透過
		Refresh
		Wait 0.07
	Next
	PlaySound lSound1
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(Blue)03.bmp ((208 - 120) - (-120) * Cos(i / 14)) (208 + 120 * Sin(i / 14)) 64 64 透過
		Refresh
		Wait 0.07
	Next
	PlaySound lSound1
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(Green)03.bmp (208 - 120 * Sin(i / 14)) ((208 - 120) + 120 * Cos(i / 14)) 64 64 透過
		Refresh
		Wait 0.07
	Next
	PlaySound lSound1
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(Orange)03.bmp (208 - (-120) * Sin(i / 14)) ((208 + 120) + (-120) * Cos(i / 14)) 64 64 透過
		Refresh
		Wait 0.07
	Next
	PlaySound lSound1
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(White)03.bmp ((208 - 120) - (-120) * Cos(i / 14)) (208 + (-120) * Sin(i / 14)) 64 64 透過
		Refresh
		Wait 0.07
	Next
	PlaySound lSound1
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(Black)03.bmp (208 - 120 * Sin(i / 14)) ((208 + 120) + (-120) * Cos(i / 14)) 64 64 透過
		Refresh
		Wait 0.07
	Next
	PlaySound lSound1
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(Red)03.bmp (208 - (-120) * Sin(i / 14)) ((208 - 120) + 120 * Cos(i / 14)) 64 64 透過
		Refresh
		Wait 0.07
	Next
	PlaySound lSound1
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(Pink)03.bmp ((208 + 120) - 120 * Cos(i / 14)) (208 + 120 * Sin(i / 14)) 64 64 透過
		Refresh
		Wait 0.07
	Next
	Center 相手ユニットＩＤ
	PlaySound lSound2
	For i = 1 to 21
		ClearPicture 0 0 480 480
		PaintPicture Bullet\EFFECT_STG_Bullet(Orange)03.bmp (208 - (-120) * Cos(i / 14)) ((208 + 120) + (-120) * Sin(i / 14)) 64 64 透過
		PaintPicture Bullet\EFFECT_STG_Bullet(Pink)03.bmp ((208 + 120) - 120 * Sin(i / 14)) (208 + (-120) * Cos(i / 14)) 64 64 透過
		PaintPicture Bullet\EFFECT_STG_Bullet(White)03.bmp ((208 - 120) - (-120) * Sin(i / 14)) (208 + 120 * Cos(i / 14)) 64 64 透過
		PaintPicture Bullet\EFFECT_STG_Bullet(Yellow)03.bmp (208 - 120 * Cos(i / 14)) ((208 - 120) + 120 * Sin(i / 14)) 64 64 透過
		PaintPicture Bullet\EFFECT_STG_Bullet(Blue)03.bmp ((208 - 120) - (-120) * Sin(i / 14)) (208 + (-120) * Cos(i / 14)) 64 64 透過
		PaintPicture Bullet\EFFECT_STG_Bullet(Black)03.bmp (208 - 120 * Cos(i / 14)) ((208 + 120) + (-120) * Sin(i / 14)) 64 64 透過
		PaintPicture Bullet\EFFECT_STG_Bullet(Red)03.bmp (208 - (-120) * Cos(i / 14)) ((208 - 120) + 120 * Sin(i / 14)) 64 64 透過
		PaintPicture Bullet\EFFECT_STG_Bullet(Green)03.bmp ((208 + 120) - 120 * Sin(i / 14)) (208 + 120 * Cos(i / 14)) 64 64 透過
		Refresh
		Wait 0.05
	Next
#	WhiteOut 10
	ClearPicture
	Refresh
Return

##### ------------------------------ 霧雨魔理沙 ------------------------------ #####

イリュージョンレーザー:
	Center 対象ユニットＩＤ
	PlaySound LaserGun.wav
	For i = 0 to 30
		DrawWidth (1 + i * 0.07)
		Line (240 + ((WX(相手ユニットＩＤ) + 16) - (WX(対象ユニットＩＤ) + 16)) / 10) _
			(240 + ((WY(相手ユニットＩＤ) + 16) - (WY(対象ユニットＩＤ) + 16)) / 10) _
			((WX(相手ユニットＩＤ) + 16) + ((WX(相手ユニットＩＤ) + 16) - (WX(対象ユニットＩＤ) + 16)) * 10) _
			((WY(相手ユニットＩＤ) + 16) + ((WY(相手ユニットＩＤ) + 16) - (WY(対象ユニットＩＤ) + 16)) * 10) _
			RGB(255,(0 + i * 8.5),255)
		Refresh
		Wait 0.1
	Next
	Wait 5
	For i = 0 to 30
		Line (240 + ((WX(相手ユニットＩＤ) + 16) - (WX(対象ユニットＩＤ) + 16)) / 10) _
			(240 + ((WY(相手ユニットＩＤ) + 16) - (WY(対象ユニットＩＤ) + 16)) / 10) _
			((WX(相手ユニットＩＤ) + 16) + ((WX(相手ユニットＩＤ) + 16) - (WX(対象ユニットＩＤ) + 16)) * 10) _
			((WY(相手ユニットＩＤ) + 16) + ((WY(相手ユニットＩＤ) + 16) - (WY(対象ユニットＩＤ) + 16)) * 10) _
			RGB(255,(255 - i * 8.5),255)
		Refresh
		Wait 0.1
	Next
	ClearPicture
	Refresh
Return

スターダストレヴァリエ:
	Local M_Time = Info(マップ,時間帯)
	Local WBMP = "Anime\Common\EFFECT_Star01.bmp"
	Center 対象ユニットＩＤ
	For i = 0 to 40
		Switch i
		Case 6 12 18 24 30 36 40
			PlaySound BeamCoat.wav
		Endsw
		PaintPicture WBMP (224 + 40 * Sin((i * 1.5 + 2.5) / 9.545)) (224 + 40 * Cos((i * 1.5 + 2.5) / 9.545)) 透過
		PaintPicture WBMP (224 + 40 * Sin((i * 1.5 + 32.5) / 9.545)) (224 + 40 * Cos((i * 1.5 + 32.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (40 + i * 8) * Sin((i + 2.5) / 9.545)) (224 + (40 + i * 8) * Cos((i + 2.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (40 + i * 8) * Sin((i + 10) / 9.545)) (224 + (40 + i * 8) * Cos((i + 10) / 9.545)) 透過
		PaintPicture WBMP (224 + (40 + i * 8) * Sin((i + 17.5) / 9.545)) (224 + (40 + i * 8) * Cos((i + 17.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (40 + i * 8) * Sin((i + 25) / 9.545)) (224 + (40 + i * 8) * Cos((i + 25) / 9.545)) 透過
		PaintPicture WBMP (224 + (40 + i * 8) * Sin((i + 32.5) / 9.545)) (224 + (40 + i * 8) * Cos((i + 32.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (40 + i * 8) * Sin((i + 40) / 9.545)) (224 + (40 + i * 8) * Cos((i + 40) / 9.545)) 透過
		PaintPicture WBMP (224 + (40 + i * 8) * Sin((i + 47.5) / 9.545)) (224 + (40 + i * 8) * Cos((i + 47.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (40 + i * 8) * Sin((i + 55) / 9.545)) (224 + (40 + i * 8) * Cos((i + 55) / 9.545)) 透過
		Refresh
		Wait 0.3
	Next
	Wait 3
	ClearPicture
	Refresh
	PlaySound Sharara.wav
	For i = 0 to 40
		PaintPicture WBMP (224 + (320 - i * 8) * Sin((i + 2.5) / 9.545)) (224 + (320 - i * 8) * Cos((i + 2.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (320 - i * 8) * Sin((i + 10) / 9.545)) (224 + (320 - i * 8) * Cos((i + 10) / 9.545)) 透過
		PaintPicture WBMP (224 + (320 - i * 8) * Sin((i + 17.5) / 9.545)) (224 + (320 - i * 8) * Cos((i + 17.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (320 - i * 8) * Sin((i + 25) / 9.545)) (224 + (320 - i * 8) * Cos((i + 25) / 9.545)) 透過
		PaintPicture WBMP (224 + (320 - i * 8) * Sin((i + 32.5) / 9.545)) (224 + (320 - i * 8) * Cos((i + 32.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (320 - i * 8) * Sin((i + 40) / 9.545)) (224 + (320 - i * 8) * Cos((i + 40) / 9.545)) 透過
		PaintPicture WBMP (224 + (320 - i * 8) * Sin((i + 47.5) / 9.545)) (224 + (320 - i * 8) * Cos((i + 47.5) / 9.545)) 透過
		PaintPicture WBMP (224 + (320 - i * 8) * Sin((i + 55) / 9.545)) (224 + (320 - i * 8) * Cos((i + 55) / 9.545)) 透過
		Refresh
		Wait 0.2
	Next
	東方画面色フィルター M_Time
	ClearPicture
	Refresh
Return

M拡扇マスタースパーク:
	#Center 対象ユニットＩＤ
	Local lX1 lY1 lX2 lY2 lX3 lY3
	Local DRCT = _MapDirectionCheck()
	_Map_CenteringCheck DRCT
	PlaySound AntiShipMissile.wav
	Switch DRCT
	Case 上
		lX1 = 240
		lY1 = 0
		lX2 = 200
		lY2 = 0
		lX3 = 280
		lY3 = 0
	Case 下
		lX1 = 240
		lY1 = 480
		lX2 = 200
		lY2 = 480
		lX3 = 280
		lY3 = 480
	Case 左
		lX1 = 0
		lY1 = 240
		lX2 = 0
		lY2 = 200
		lX3 = 0
		lY3 = 280
	Case 右
		lX1 = 480
		lY1 = 240
		lX2 = 480
		lY2 = 200
		lX3 = 480
		lY3 = 280
	EndSw

	For i = 0 to 10
		ClearPicture 0 0 480 480
		DrawWidth (1 + i * Args(1))
		Line (WX(対象ユニットＩＤ) + 16) (WY(対象ユニットＩＤ) + 16) lX1 lY1 RGB(255,255,0)
		Refresh
		Wait 0.2
	Next
	For i = 1 to Args(1)
		ClearPicture 0 0 480 480
		PlaySound Breath.wav
		Refresh
		For j = 1 to 5
			Switch Random(9)
			Case 1
				Color RGB(256,0,0)   
			Case 2
				Color RGB(256,128,0)
			Case 3
				Color RGB(128,256,0)
			Case 4
				Color RGB(0,256,0)
			Case 5
				Color RGB(0,256,128)
			Case 6
				Color RGB(0,128,256)
			Case 7
				Color RGB(0,0,256)
			Case 8
				Color RGB(128,0,256)
			Case 9
				Color RGB(256,0,128)
			Endsw
			ClearPicture 0 0 480 480
			DrawWidth (Args(1) * 10)
			Line (WX(対象ユニットＩＤ) + 16) (WY(対象ユニットＩＤ) + 16) lX1 lY1
			Line (WX(対象ユニットＩＤ) + 16) (WY(対象ユニットＩＤ) + 16) lX2 lY2
			Line (WX(対象ユニットＩＤ) + 16) (WY(対象ユニットＩＤ) + 16) lX3 lY3
			Refresh
			DrawWidth (((Args(1) * 10) - 30) / j)
			Line (WX(対象ユニットＩＤ) + 16) (WY(対象ユニットＩＤ) + 16) lX1 lY1 RGB(255,255,255)
			Refresh
			Wait 0.2
		Next
		Refresh
		Wait 0.1
	Next
	For i = 1 to 20
		ClearPicture 0 0 480 480
		DrawWidth ((Args(1) * 10) / i)
		Line (WX(対象ユニットＩＤ) + 16) (WY(対象ユニットＩＤ) + 16) lX1 lY1 RGB(255,255,255)
		Refresh
		Wait 0.1
	Next
	ClearPicture
	Refresh
Return

ノンディレクショナルレーザー:
	Center 対象ユニットＩＤ
	PlaySound Interference.wav
	For i = 0 to 100
		ClearPicture 0 0 480 480
		Refresh
		DrawWidth Args(1)
		Color Args(2)
		Line (240 - (Args(1) * 0.75) * Sin(i / 4.75)) (240 - (Args(1) * 0.75) * Cos(i / 4.75)) _
			(240 - 400 * Sin(i / 4.75)) (240 - 400 * Cos(i / 4.75))
		Line (240 - (Args(1) * 0.75) * Sin((i + 10) / 4.75)) (240 - (Args(1) * 0.75) * Cos((i + 10) / 4.75)) _
			(240 - 400 * Sin((i + 10) / 4.75)) (240 - 400 * Cos((i + 10) / 4.75))
		Line (240 - (Args(1) * 0.75) * Sin((i - 10) / 4.75)) (240 - (Args(1) * 0.75) * Cos((i - 10) / 4.75)) _
			(240 - 400 * Sin((i - 10) / 4.75)) (240 - 400 * Cos((i - 10) / 4.75))
		DrawWidth (Args(1) * 0.8)
		Color RGB(255,255,255)
		Line (240 - (Args(1) * 0.75) * Sin(i / 4.75)) (240 - (Args(1) * 0.75) * Cos(i / 4.75)) _
			(240 - 400 * Sin(i / 4.75)) (240 - 400 * Cos(i / 4.75))
		Line (240 - (Args(1) * 0.75) * Sin((i + 10) / 4.75)) (240 - (Args(1) * 0.75) * Cos((i + 10) / 4.75)) _
			(240 - 400 * Sin((i + 10) / 4.75)) (240 - 400 * Cos((i + 10) / 4.75))
		Line (240 - (Args(1) * 0.75) * Sin((i - 10) / 4.75)) (240 - (Args(1) * 0.75) * Cos((i - 10) / 4.75)) _
			(240 - 400 * Sin((i - 10) / 4.75)) (240 - 400 * Cos((i - 10) / 4.75))
		Refresh
		Wait (0.4 - i / 400)
	Next
	ClearPicture
	Refresh
Return

ノンディレクショナルレーザーv2:
	Center 対象ユニットＩＤ
	DrawWidth Args(1)
	PlaySound Interference.wav
	For i = 0 to 100
		ClearPicture 0 0 480 480
		Refresh
		DrawWidth Args(1)
		Color Args(2)
		Line (240 - (Args(1) * 0.75) * Sin(i / 4.76)) (240 - (Args(1) * 0.75) * Cos(i / 4.76)) (240 - 300 * Sin(i / 4.76)) (240 - 300 * Cos(i / 4.76))
		DrawWidth (Args(1) * 0.8)
		Color RGB(255,255,255)
		Line (240 - (Args(1) * 0.75) * Sin(i / 4.76)) (240 - (Args(1) * 0.75) * Cos(i / 4.76)) (240 - 300 * Sin(i / 4.76)) (240 - 300 * Cos(i / 4.76))
		DrawWidth Args(1)
		Color Args(3)
		Line (240 - (Args(1) * 0.75) * Sin(i / (-4.76))) (240 - (Args(1) * 0.75) * Cos(i / (-4.76))) (240 - 300 * Sin(i / (-4.76))) (240 - 300 * Cos(i / (-4.76)))
		DrawWidth (Args(1) * 0.8)
		Color RGB(255,255,255)
		Line (240 - (Args(1) * 0.75) * Sin(i / (-4.76))) (240 - (Args(1) * 0.75) * Cos(i / (-4.76))) (240 - 300 * Sin(i / (-4.76))) (240 - 300 * Cos(i / (-4.76)))
		DrawWidth Args(1)
		Color Args(2)
		Line (240 - (Args(1) * 0.75) * Sin((i + 10) / 4.76)) (240 - (Args(1) * 0.75) * Cos((i + 10) / 4.76)) (240 - 400 * Sin((i + 10) / 4.76)) (240 - 400 * Cos((i + 10) / 4.76))
		DrawWidth (Args(1) * 0.8)
		Color RGB(255,255,255)
		Line (240 - (Args(1) * 0.75) * Sin((i + 10) / 4.76)) (240 - (Args(1) * 0.75) * Cos((i + 10) / 4.76)) (240 - 400 * Sin((i + 10) / 4.76)) (240 - 400 * Cos((i + 10) / 4.76))
		DrawWidth Args(1)
		Color Args(3)
		Line (240 - (Args(1) * 0.75) * Sin((i + 10) / (-4.76))) (240 - (Args(1) * 0.75) * Cos((i + 10) / (-4.76))) (240 - 400 * Sin((i + 10) / (-4.76))) (240 - 400 * Cos((i + 10) / (-4.76)))
		DrawWidth (Args(1) * 0.8)
		Color RGB(255,255,255)
		Line (240 - (Args(1) * 0.75) * Sin((i + 10) / (-4.76))) (240 - (Args(1) * 0.75) * Cos((i + 10) / (-4.76))) (240 - 400 * Sin((i + 10) / (-4.76))) (240 - 400 * Cos((i + 10) / (-4.76)))
		DrawWidth Args(1)
		Color Args(2)
		Line (240 - (Args(1) * 0.75) * Sin((i - 10) / 4.76)) (240 - (Args(1) * 0.75) * Cos((i - 10) / 4.76)) (240 - 400 * Sin((i - 10) / 4.76)) (240 - 400 * Cos((i - 10) / 4.76))
		DrawWidth (Args(1) * 0.8)
		Color RGB(255,255,255)
		Line (240 - (Args(1) * 0.75) * Sin((i - 10) / 4.76)) (240 - (Args(1) * 0.75) * Cos((i - 10) / 4.76)) (240 - 400 * Sin((i - 10) / 4.76)) (240 - 400 * Cos((i - 10) / 4.76))
		DrawWidth Args(1)
		Color Args(3)
		Line (240 - (Args(1) * 0.75) * Sin((i - 10) / (-4.76))) (240 - (Args(1) * 0.75) * Cos((i - 10) / (-4.76))) (240 - 400 * Sin((i - 10) / (-4.76))) (240 - 400 * Cos((i - 10) / (-4.76)))
		DrawWidth (Args(1) * 0.8)
		Color RGB(255,255,255)
		Line (240 - (Args(1) * 0.75) * Sin((i - 10) / (-4.76))) (240 - (Args(1) * 0.75) * Cos((i - 10) / (-4.76))) (240 - 400 * Sin((i - 10) / (-4.76))) (240 - 400 * Cos((i - 10) / (-4.76)))
		Refresh
		Wait (0.4 - i / 400)
	Next
	ClearPicture
	Refresh
Return

ブレイジングスター:
	Center 相手ユニットＩＤ
	DrawWidth 1
	PlaySound Args(1)
	For i = 0 to 20
		ClearPicture 0 0 480 480
		DrawWidth (1 + i * 10)
		Line (480 - i) i 480 1 RGB(255,255 0)
		Refresh
		Wait 0.1
	Next
	For i = 0 to 40
		Line (460 - i * 5.5) (20 + i * 5.5) 480 1 RGB(255,255,0)
		Refresh
		Wait 0.05
	Next
	ClearPicture
	Refresh
Return

ブレイジングスター(ミス):
	Center 相手ユニットＩＤ
	DrawWidth 1
	PlaySound Args(1)
	For i = 0 to 20
		ClearPicture 0 0 480 480
		DrawWidth (1 + i * 10)
		Line (480 - i) i 480 1 RGB(255,255 0)
		Refresh
		Wait 0.1
	Next
	For i = 0 to 80
		Line (480 - i * 6) (1 + i * 6) 480 1 RGB(255,255,0)
		Refresh
		Wait 0.05
	Next
	ClearPicture
	Refresh
Return

##### ------------------------------ チルノ ------------------------------ #####

パーフェクトフリーズ:
	Local M_Time = Info(マップ,時間帯)
	Center 相手ユニットＩＤ
	Color RGB(0,0,255)
	FillStyle 塗りつぶし
	FillColor RGB(200,200,255)
	DrawWidth 2
	PlaySound Storm.wav
	For i = 0 to 40
		Circle (120 + Random(240)) (120 + Random(240)) 8
		Circle (120 + Random(240)) (120 + Random(240)) 8
		Circle (120 + Random(240)) (120 + Random(240)) 8
		Circle (120 + Random(240)) (120 + Random(240)) 8
		Refresh
		Wait 0.5
	Next
	PlaySound Ice.wav
	東方画面色変更 Water
	Wait 20

	東方画面色フィルター M_Time
	ClearPicture
	Refresh
Return

##### ------------------------------ パチュリー＝ノーレッジ ------------------------------ #####

ロイヤルフレア:
	Local M_Time = Info(マップ,時間帯)
	Local WBMP = "Anime\Beam\EFFECT_LBeam(Red)04.bmp"
	Center X(目標地点) Y(目標地点)
	東方画面色変更 Sunset
	For i = 0 to 80
		Switch i
		Case 0 12 24 36 48 60 72
			PlaySound AntiAirMissile.wav
		Endsw
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 0) / (-9.545))) (208 + (i ^ 1.5) * Cos((i + 0) / (-9.545))) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 20) / (-9.545))) (208 + (i ^ 1.5) * Cos((i + 20) / (-9.545))) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i - 20) / (-9.545))) (208 + (i ^ 1.5) * Cos((i - 20) / (-9.545))) 透過
		PaintPicture WBMP (208 + (40 + i * 3) * Sin((i + 10) / (-9.545))) (208 + (40 + i * 3) * Cos((i + 10) / (-9.545))) 透過
		PaintPicture WBMP (208 + (40 + i * 3) * Sin((i + 30) / (-9.545))) (208 + (40 + i * 3) * Cos((i + 30) / (-9.545))) 透過
		PaintPicture WBMP (208 + (40 + i * 3) * Sin((i + 50) / (-9.545))) (208 + (40 + i * 3) * Cos((i + 50) / (-9.545))) 透過
		Color RGB(255,0,0)
		Polygon (240 + (i ^ 1.5) * Sin((i + 0) / (-9.545))) (240 + (i ^ 1.5) * Cos((i + 0) / (-9.545))) _
			(240 + (i ^ 1.5) * Sin((i + 20) / (-9.545))) (240 + (i ^ 1.5) * Cos((i + 20) / (-9.545))) _
			(240 + (i ^ 1.5) * Sin((i - 20) / (-9.545))) (240 + (i ^ 1.5) * Cos((i - 20) / (-9.545)))
		Refresh
		Wait 0.1
	Next
	ClearPicture
	Refresh
	For i = 0 to 80
		Switch i
		Case 0 14 28 42 56 70
			PlaySound Breath.wav
		Endsw
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 0) / 9.545)) (208 + (i ^ 1.5) * Cos((i + 0) / 9.545)) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 12) / 9.545)) (208 + (i ^ 1.5) * Cos((i + 12) / 9.545)) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 24) / 9.545)) (208 + (i ^ 1.5) * Cos((i + 24) / 9.545)) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 36) / 9.545)) (208 + (i ^ 1.5) * Cos((i + 36) / 9.545)) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 48) / 9.545)) (208 + (i ^ 1.5) * Cos((i + 48) / 9.545)) 透過
		PaintPicture WBMP (208 + (60 + i * 3) * Sin((i + 6) / 9.545)) (208 + (60 + i * 3) * Cos((i + 6) / 9.545)) 透過
		PaintPicture WBMP (208 + (60 + i * 3) * Sin((i + 30) / 9.545)) (208 + (60 + i * 3) * Cos((i + 30) / 9.545)) 透過
		PaintPicture WBMP (208 + (60 + i * 3) * Sin((i + 54) / 9.545)) (208 + (60 + i * 3) * Cos((i + 54) / 9.545)) 透過
		Color RGB(255,0,0)
		Polygon (240 + (i ^ 1.5) * Sin((i + 0) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 0) / 9.545)) _
			(240 + (i ^ 1.5) * Sin((i + 12) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 12) / 9.545)) _
			(240 + (i ^ 1.5) * Sin((i + 24) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 24) / 9.545)) _
			(240 + (i ^ 1.5) * Sin((i + 36) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 36) / 9.545)) _
			(240 + (i ^ 1.5) * Sin((i + 48) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 48) / 9.545))
		Refresh
		Wait 0.1
	Next
	ClearPicture
	Refresh
	For i = 0 to 80
		Switch i
		Case 0 16 32 48 64 80
			PlaySound Explode(Nuclear).wav
		Endsw
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 0) / (-9.545))) (208 + (i ^ 1.5) * Cos((i + 0) / (-9.545))) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 10) / (-9.545))) (208 + (i ^ 1.5) * Cos((i + 10) / (-9.545))) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 20) / (-9.545))) (208 + (i ^ 1.5) * Cos((i + 20) / (-9.545))) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 30) / (-9.545))) (208 + (i ^ 1.5) * Cos((i + 30) / (-9.545))) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 40) / (-9.545))) (208 + (i ^ 1.5) * Cos((i + 40) / (-9.545))) 透過
		PaintPicture WBMP (208 + (i ^ 1.5) * Sin((i + 50) / (-9.545))) (208 + (i ^ 1.5) * Cos((i + 50) / (-9.545))) 透過
		PaintPicture WBMP (208 + (40 + i * 3) * Sin((i + 10) / (-9.545))) (208 + (40 + i * 3) * Cos((i + 10) / (-9.545))) 透過
		PaintPicture WBMP (208 + (40 + i * 3) * Sin((i + 30) / (-9.545))) (208 + (40 + i * 3) * Cos((i + 30) / (-9.545))) 透過
		PaintPicture WBMP (208 + (40 + i * 3) * Sin((i + 50) / (-9.545))) (208 + (40 + i * 3) * Cos((i + 50) / (-9.545))) 透過
		Polygon (240 + (i ^ 1.5) * Sin((i + 0) / (-9.545))) (240 + (i ^ 1.5) * Cos((i + 0) / (-9.545))) _
			(240 + (i ^ 1.5) * Sin((i + 10) / (-9.545))) (240 + (i ^ 1.5) * Cos((i + 10) / (-9.545))) _
			(240 + (i ^ 1.5) * Sin((i + 20) / (-9.545))) (240 + (i ^ 1.5) * Cos((i + 20) / (-9.545))) _
			(240 + (i ^ 1.5) * Sin((i + 30) / (-9.545))) (240 + (i ^ 1.5) * Cos((i + 30) / (-9.545))) _
			(240 + (i ^ 1.5) * Sin((i + 40) / (-9.545))) (240 + (i ^ 1.5) * Cos((i + 40) / (-9.545))) _
			(240 + (i ^ 1.5) * Sin((i + 50) / (-9.545))) (240 + (i ^ 1.5) * Cos((i + 50) / (-9.545)))
		Polygon (240 + (i ^ 1.5) * Sin((i + 0) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 0) / 9.545)) _
			(240 + (i ^ 1.5) * Sin((i + 12) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 12) / 9.545)) _
			(240 + (i ^ 1.5) * Sin((i + 24) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 24) / 9.545)) _
			(240 + (i ^ 1.5) * Sin((i + 36) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 36) / 9.545)) _
			(240 + (i ^ 1.5) * Sin((i + 48) / 9.545)) (240 + (i ^ 1.5) * Cos((i + 48) / 9.545))
		Refresh
		Wait 0.1
	Next
#	WhiteOut 30

	東方画面色フィルター M_Time

	ClearPicture
	Refresh
Return

##### ------------------------------ 十六夜咲夜 ------------------------------ #####

殺人ドール:
	Center 対象ユニットＩＤ
	For i = 0 to 20
		PlaySound Sword.wav
		PaintPicture Anime\Weapon\EFFECT_ThrowingDagger01.bmp _
			(224 - 40 * Sin(i / 3.18)) (224 - 40 * Cos(i / 3.18)) 透過 左回転 ((-90) + 18 * i)
		Refresh
		Wait 0.5
	Next
	Wait 5
	If Args(1) = Y Then
		AutoTalk Args(2) 固定
		10;$(Args(3))
		End
	ElseIf Args(1) = N Then
		Wait 10
	EndIf
	DrawOption 保持
	For i = 0 to 20
		PlaySound Slash.wav
		ClearPicture (224 - 40 * Sin(i / 3.18)) (224 - 40 * Cos(i / 3.18)) (256 - 40 * Sin(i / 3.18)) (256 - 40 * Cos(i / 3.18))
		Line (240 - 40 * Sin(i / 3.18)) (240 - 40 * Cos(i / 3.18)) _
			(((WX(相手ユニットＩＤ) + 16) - ((WX(対象ユニットＩＤ) + 16) - (WX(相手ユニットＩＤ) + 16)) * 20) + 800 * Sin(i / 3.18)) _
			(((WY(相手ユニットＩＤ) + 16) - ((WY(対象ユニットＩＤ) + 16) - (WY(相手ユニットＩＤ) + 16)) * 20) + 800 * Cos(i / 3.18))
		Refresh
		Wait 0.4
	Next
	ClearPicture
	Refresh
Return

夜霧の幻影殺人鬼:
	Local a
	Local b
	Center 相手ユニットＩＤ
	For i = 0 to 100
		PlaySound Sword.wav
		PaintPicture Anime\Weapon\EFFECT_ThrowingDagger01.bmp Random(480) Random(480) 透過 左回転 Random(360)
		Refresh
		Wait 0
	Next
	Wait 10
	For i = 0 to 100
		Switch i
		Case 4 8 12 16 20 24 28 32 35 38 41 44 47 50 53 56 58 60 62 64 66 68 70 72 74 76 78 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
			PlaySound Slash.wav
		Endsw
		Switch i
		Case 0
			DrawWidth 1
			Color RGB(255,255,255)
		Case 56
			DrawWidth 1
			Color RGB(255,0,0)
		Endsw
		ClearPicture 0 0 480 480
		Set a Random(480)
		Set b Random(480)
		Line a b ((WX(相手ユニットＩＤ) + 16) + (((WX(相手ユニットＩＤ) + 16) - a) * 100)) _
			((WY(相手ユニットＩＤ) + 16) + (((WY(相手ユニットＩＤ) + 16) - b) * 100))
		Line Random(480) 480 Random(480) 0
		Line 480 Random(480) Random(480) 0 
		Line Random(480) 480 0 Random(480)
		Line 0 Random(480) 480 Random(480)
		Line Random(480) 480 480 Random(480)
		Line Random(480) 0 0 Random(480)
		#Font 30pt RGB(255,255,255)
		#PaintString 300 50 $(i - 1)HIT
		#Refresh
		#Wait 0.2
		#Next
		#Redraw
		#For i = 0 to 20
		#Font "$(50 - i)pt" RGB(255,255,255)
		#PaintString (300 + i) (50 + i) 99HIT
		Refresh
		Wait 0.2
	Next
	ClearPicture
	Refresh
Return

##### ------------------------------ レミリア＝スカーレット ------------------------------ #####

千本の針の山:
	Local WBMP = "Anime\Weapon\EFFECT_NinjaBlade01.bmp"
	Center 対象ユニットＩＤ
	PlaySound Storm.wav
	For i = 0 to 20
		PaintPicture WBMP (224 + (60 + Random(30)) * Sin(i / 6.359)) (224 + (60 + Random(30)) * Cos(i / 6.359)) 透過 左右反転 左回転 (i * 9)
		PaintPicture WBMP (224 + (40 + Random(30)) * Sin((i + 10) / 6.359)) (224 + (40 + Random(30)) * Cos((i + 10) / 6.359)) 透過 左右反転 左回転 (90 + i * 9)
		PaintPicture WBMP (224 + (60 + Random(30)) * Sin((i + 20) / 6.359)) (224 + (60 + Random(30)) * Cos((i + 20) / 6.359)) 透過 左回転 (i * 9)
		PaintPicture WBMP (224 + (40 + Random(30)) * Sin((i + (-10)) / 6.359)) (224 + (40 + Random(30)) * Cos((i + (-10)) / 6.359)) 透過 左回転 (90 + i * 9)
		PaintPicture WBMP (224 + (20 + Random(30)) * Sin((i + 5) / (-6.359))) (224 + (20 + Random(30)) * Cos((i + 5) / (-6.359))) 透過 右回転 (45 + i * 9)
		PaintPicture WBMP (224 + (40 + Random(30)) * Sin((i + 15) / (-6.359))) (224 + (40 + Random(30)) * Cos((i + 15) / (-6.359))) 透過 右回転 (135 + i * 9)
		PaintPicture WBMP (224 + (20 + Random(30)) * Sin((i + 25) / (-6.359))) (224 + (20 + Random(30)) * Cos((i + 25) / (-6.359))) 透過 左右反転 右回転 (45 + i * 9)
		PaintPicture WBMP (224 + (40 + Random(30)) * Sin((i + (-5)) / (-6.359))) (224 + (40 + Random(30)) * Cos((i + (-5)) / (-6.359))) 透過 左右反転 右回転 (135 + i * 9)
		Refresh
		Wait 0.1
	Next
	For i = 0 to 40
		PaintPicture WBMP (224 + (60 + i * 6.5) * Sin(i / 6.359)) (224 + (60 + i * 6.5) * Cos(i / 6.359)) 透過 左右反転 左回転 ((-10) + i * 9)
		PaintPicture WBMP (224 + (60 + i * 6.5) * Sin((i + 10) / 6.359)) (224 + (60 + i * 6.5) * Cos((i + 10) / 6.359)) 透過 左右反転 左回転 (80 + i * 9)
		PaintPicture WBMP (224 + (60 + i * 6.5) * Sin((i + 20) / 6.359)) (224 + (60 + i * 6.5) * Cos((i + 20) / 6.359)) 透過 左回転 ((-10) + i * 9)
		PaintPicture WBMP (224 + (60 + i * 6.5) * Sin((i + (-10)) / 6.359)) (224 + (60 + i * 6.5) * Cos((i + (-10)) / 6.359)) 透過 左回転 (80 + i * 9)
		PaintPicture WBMP (224 + (60 + i * 6.5) * Sin((i + 5) / (-6.359))) (224 + (60 + i * 6.5) * Cos((i + 5) / (-6.359))) 透過 右回転 (35 + i * 9)
		PaintPicture WBMP (224 + (60 + i * 6.5) * Sin((i + 15) / (-6.359))) (224 + (60 + i * 6.5) * Cos((i + 15) / (-6.359))) 透過 右回転 (125 + i * 9)
		PaintPicture WBMP (224 + (60 + i * 6.5) * Sin((i + 25) / (-6.359))) (224 + (60 + i * 6.5) * Cos((i + 25) / (-6.359))) 透過 左右反転 右回転 (35 + i * 9)
		PaintPicture WBMP (224 + (60 + i * 6.5) * Sin((i + (-5)) / (-6.359))) (224 + (60 + i * 6.5) * Cos((i + (-5)) / (-6.359))) 透過 左右反転 右回転 (125 + i * 9)
		Refresh
		Wait 0.1
	Next
	Wait 5
	ClearPicture
	Refresh
Return

不夜城レッド:
	Local M_Time = Info(マップ,時間帯)
	Center 対象ユニットＩＤ
	If Args(1) = 紅符 Then
		東方画面色変更 Night
	ElseIf Args(1) = 紅魔 Then
		東方画面色変更 Sunset
	EndIf
	Color RGB(255,0,0)
	FillStyle 塗りつぶし
	FillColor RGB(255,0,0)
	PlaySound Charge(High).wav
	For i = 0 to 10
		ClearPicture 0 0 480 480
		Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
			(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
			(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
			(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
			(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
			240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
			(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
		Refresh
		Wait 0.3
	Next
	PlaySound Charge(High).wav
	For i = 0 to 10
		ClearPicture 0 0 480 480
		Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
			(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
			(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
			(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
			(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
			240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
			(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
		Refresh
		Wait 0.3
	Next
	PlaySound Charge(High).wav
	For i = 0 to 10
		ClearPicture 0 0 480 480
		Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
			(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
			(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
			(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
			(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
			240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
			(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
		Refresh
		Wait 0.3
	Next
	PlaySound Charge(High).wav
	For i = 0 to 10
		ClearPicture 0 0 480 480
		Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
			(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
			(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
			(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
			(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
			240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
			(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
		Refresh
		Wait 0.2
	Next
	PlaySound Charge(High).wav
	For i = 0 to 10
		ClearPicture 0 0 480 480
		Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
			(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
			(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
			(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
			(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
			240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
			(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
		Refresh
		Wait 0.2
	Next
	PlaySound Charge(High).wav
	For i = 0 to 10
		ClearPicture 0 0 480 480
		Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
			(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
			(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
			(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
			(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
			240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
			(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
		Refresh
		Wait 0.2
	Next
	PlaySound Charge(High).wav
	For i = 0 to 10
		ClearPicture 0 0 480 480
		Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
			(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
			(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
			(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
			(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
			240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
			(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
		Refresh
		Wait 0.1
	Next
	PlaySound Charge(High).wav
	For i = 0 to 10
		ClearPicture 0 0 480 480
		Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
			(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
			(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
			(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
			(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
			240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
			(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
		Refresh
		Wait 0.1
	Next

	If Args(1) = 紅魔 Then
		PlaySound Charge(High).wav
		For i = 0 to 10
			ClearPicture 0 0 480 480
			Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) 250 250 _
				(260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 + i * 4) (240 - i * 4) _
				(240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) _
				(240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 3) 240 _
				(240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) (240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
				240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) (240 + i * 4) (240 + i * 4) _
				(240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
			Refresh
			Wait 0.1
		Next
		PlaySound Charge(High).wav
		For i = 0 to 10
			ClearPicture 0 0 480 480
			Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) _
				250 250 (260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) _
				(240 + i * 4) (240 - i * 4) (240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) _
				(240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) (240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) _
				(240 - (i * 2) ^ 3) 240 (240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) _
				(240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) 240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
				(240 + i * 4) (240 + i * 4) (240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
			Refresh
			Wait 0.1
		Next
		PlaySound Charge(High).wav
		For i = 0 to 10
			ClearPicture 0 0 480 480
			Polygon (260 + i ^ 1.5) 240 250 230 240 (220 - i ^ 1.5) 230 230 (220 - i ^ 1.5) 240 230 250 240 (260 + i ^ 1.5) _
				250 250 (260 + i ^ 1.5) 240 (240 + (i * 2) ^ 3) 240 (240 + (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) _
				(240 + i * 4) (240 - i * 4) (240 + (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) 240 (240 - (i * 2) ^ 3) _
				(240 - (i * 2) ^ 1.5) (240 - (i * 2) ^ 2) (240 - i * 4) (240 - i * 4) (240 - (i * 2) ^ 2) (240 - (i * 2) ^ 1.5) _
				(240 - (i * 2) ^ 3) 240 (240 - (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 - i * 4) (240 + i * 4) _
				(240 - (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) 240 (240 + (i * 2) ^ 3) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 2) _
				(240 + i * 4) (240 + i * 4) (240 + (i * 2) ^ 2) (240 + (i * 2) ^ 1.5) (240 + (i * 2) ^ 3) 240
			Refresh
			Wait 0.1
		Next
	EndIf

	東方画面色フィルター M_Time

	ClearPicture
	Refresh
Return

スカーレットディスティニー:
	Local S
	Local P = 57.2957914
	Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
	Local ANG = _GetAngle(UID)
	Local XS1 = (((WX(相手ユニットＩＤ) + 16) - (WX(対象ユニットＩＤ) + 16)) / 10)
	Local YS1 = (((WY(相手ユニットＩＤ) + 16) - (WY(対象ユニットＩＤ) + 16)) / 10)
	Local WBMP = "Anime\Weapon\EFFECT_NinjaBlade01.bmp"

	Center 対象ユニットＩＤ

	For i = 1 to 40
		Set S (20 * i)
		If i < 14 Then
			PlaySound Storm.wav
		EndIf
		Switch i
		Case 1
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
		Case 2
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
		Case 3
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
		Case 4
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
		Case 5
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
		Case 6
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG + 20) / P)) (224 - (S - 120) * Sin((ANG + 20) / P)) 透過 右回転 (ANG + 20) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG - 20) / P)) (224 - (S - 120) * Sin((ANG - 20) / P)) 透過 右回転 (ANG - 20) 夕焼け
		Case 7
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG + 20) / P)) (224 - (S - 120) * Sin((ANG + 20) / P)) 透過 右回転 (ANG + 20) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG - 20) / P)) (224 - (S - 120) * Sin((ANG - 20) / P)) 透過 右回転 (ANG - 20) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG + 24) / P)) (224 - (S - 140) * Sin((ANG + 24) / P)) 透過 右回転 (ANG + 24) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG - 24) / P)) (224 - (S - 140) * Sin((ANG - 24) / P)) 透過 右回転 (ANG - 24) 夕焼け
		Case 8
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG + 20) / P)) (224 - (S - 120) * Sin((ANG + 20) / P)) 透過 右回転 (ANG + 20) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG - 20) / P)) (224 - (S - 120) * Sin((ANG - 20) / P)) 透過 右回転 (ANG - 20) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG + 24) / P)) (224 - (S - 140) * Sin((ANG + 24) / P)) 透過 右回転 (ANG + 24) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG - 24) / P)) (224 - (S - 140) * Sin((ANG - 24) / P)) 透過 右回転 (ANG - 24) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG + 28) / P)) (224 - (S - 160) * Sin((ANG + 28) / P)) 透過 右回転 (ANG + 28) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG - 28) / P)) (224 - (S - 160) * Sin((ANG - 28) / P)) 透過 右回転 (ANG - 28) 夕焼け
		Case 9
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG + 20) / P)) (224 - (S - 120) * Sin((ANG + 20) / P)) 透過 右回転 (ANG + 20) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG - 20) / P)) (224 - (S - 120) * Sin((ANG - 20) / P)) 透過 右回転 (ANG - 20) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG + 24) / P)) (224 - (S - 140) * Sin((ANG + 24) / P)) 透過 右回転 (ANG + 24) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG - 24) / P)) (224 - (S - 140) * Sin((ANG - 24) / P)) 透過 右回転 (ANG - 24) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG + 28) / P)) (224 - (S - 160) * Sin((ANG + 28) / P)) 透過 右回転 (ANG + 28) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG - 28) / P)) (224 - (S - 160) * Sin((ANG - 28) / P)) 透過 右回転 (ANG - 28) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG + 32) / P)) (224 - (S - 180) * Sin((ANG + 32) / P)) 透過 右回転 (ANG + 32) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG - 32) / P)) (224 - (S - 180) * Sin((ANG - 32) / P)) 透過 右回転 (ANG - 32) 夕焼け
		Case 10
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG + 20) / P)) (224 - (S - 120) * Sin((ANG + 20) / P)) 透過 右回転 (ANG + 20) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG - 20) / P)) (224 - (S - 120) * Sin((ANG - 20) / P)) 透過 右回転 (ANG - 20) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG + 24) / P)) (224 - (S - 140) * Sin((ANG + 24) / P)) 透過 右回転 (ANG + 24) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG - 24) / P)) (224 - (S - 140) * Sin((ANG - 24) / P)) 透過 右回転 (ANG - 24) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG + 28) / P)) (224 - (S - 160) * Sin((ANG + 28) / P)) 透過 右回転 (ANG + 28) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG - 28) / P)) (224 - (S - 160) * Sin((ANG - 28) / P)) 透過 右回転 (ANG - 28) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG + 32) / P)) (224 - (S - 180) * Sin((ANG + 32) / P)) 透過 右回転 (ANG + 32) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG - 32) / P)) (224 - (S - 180) * Sin((ANG - 32) / P)) 透過 右回転 (ANG - 32) 夕焼け
			PaintPicture WBMP (224 - (S - 200) * Cos((ANG + 36) / P)) (224 - (S - 200) * Sin((ANG + 36) / P)) 透過 右回転 (ANG + 36) 夕焼け
			PaintPicture WBMP (224 - (S - 200) * Cos((ANG - 36) / P)) (224 - (S - 200) * Sin((ANG - 36) / P)) 透過 右回転 (ANG - 36) 夕焼け
		Case 11
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG + 20) / P)) (224 - (S - 120) * Sin((ANG + 20) / P)) 透過 右回転 (ANG + 20) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG - 20) / P)) (224 - (S - 120) * Sin((ANG - 20) / P)) 透過 右回転 (ANG - 20) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG + 24) / P)) (224 - (S - 140) * Sin((ANG + 24) / P)) 透過 右回転 (ANG + 24) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG - 24) / P)) (224 - (S - 140) * Sin((ANG - 24) / P)) 透過 右回転 (ANG - 24) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG + 28) / P)) (224 - (S - 160) * Sin((ANG + 28) / P)) 透過 右回転 (ANG + 28) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG - 28) / P)) (224 - (S - 160) * Sin((ANG - 28) / P)) 透過 右回転 (ANG - 28) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG + 32) / P)) (224 - (S - 180) * Sin((ANG + 32) / P)) 透過 右回転 (ANG + 32) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG - 32) / P)) (224 - (S - 180) * Sin((ANG - 32) / P)) 透過 右回転 (ANG - 32) 夕焼け
			PaintPicture WBMP (224 - (S - 200) * Cos((ANG + 36) / P)) (224 - (S - 200) * Sin((ANG + 36) / P)) 透過 右回転 (ANG + 36) 夕焼け
			PaintPicture WBMP (224 - (S - 200) * Cos((ANG - 36) / P)) (224 - (S - 200) * Sin((ANG - 36) / P)) 透過 右回転 (ANG - 36) 夕焼け
			PaintPicture WBMP (224 - (S - 220) * Cos((ANG + 40) / P)) (224 - (S - 220) * Sin((ANG + 40) / P)) 透過 右回転 (ANG + 40) 夕焼け
			PaintPicture WBMP (224 - (S - 220) * Cos((ANG - 40) / P)) (224 - (S - 220) * Sin((ANG - 40) / P)) 透過 右回転 (ANG - 40) 夕焼け
		Case 12
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG + 20) / P)) (224 - (S - 120) * Sin((ANG + 20) / P)) 透過 右回転 (ANG + 20) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG - 20) / P)) (224 - (S - 120) * Sin((ANG - 20) / P)) 透過 右回転 (ANG - 20) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG + 24) / P)) (224 - (S - 140) * Sin((ANG + 24) / P)) 透過 右回転 (ANG + 24) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG - 24) / P)) (224 - (S - 140) * Sin((ANG - 24) / P)) 透過 右回転 (ANG - 24) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG + 28) / P)) (224 - (S - 160) * Sin((ANG + 28) / P)) 透過 右回転 (ANG + 28) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG - 28) / P)) (224 - (S - 160) * Sin((ANG - 28) / P)) 透過 右回転 (ANG - 28) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG + 32) / P)) (224 - (S - 180) * Sin((ANG + 32) / P)) 透過 右回転 (ANG + 32) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG - 32) / P)) (224 - (S - 180) * Sin((ANG - 32) / P)) 透過 右回転 (ANG - 32) 夕焼け
			PaintPicture WBMP (224 - (S - 200) * Cos((ANG + 36) / P)) (224 - (S - 200) * Sin((ANG + 36) / P)) 透過 右回転 (ANG + 36) 夕焼け
			PaintPicture WBMP (224 - (S - 200) * Cos((ANG - 36) / P)) (224 - (S - 200) * Sin((ANG - 36) / P)) 透過 右回転 (ANG - 36) 夕焼け
			PaintPicture WBMP (224 - (S - 220) * Cos((ANG + 40) / P)) (224 - (S - 220) * Sin((ANG + 40) / P)) 透過 右回転 (ANG + 40) 夕焼け
			PaintPicture WBMP (224 - (S - 220) * Cos((ANG - 40) / P)) (224 - (S - 220) * Sin((ANG - 40) / P)) 透過 右回転 (ANG - 40) 夕焼け
			PaintPicture WBMP (224 - (S - 240) * Cos((ANG + 44) / P)) (224 - (S - 240) * Sin((ANG + 44) / P)) 透過 右回転 (ANG + 44) 夕焼け
			PaintPicture WBMP (224 - (S - 240) * Cos((ANG - 44) / P)) (224 - (S - 240) * Sin((ANG - 44) / P)) 透過 右回転 (ANG - 44) 夕焼け
		Case 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
			PaintPicture WBMP (224 - S * Cos(ANG / P)) (224 - S * Sin(ANG / P)) 透過 右回転 ANG 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG + 4) / P)) (224 - (S - 20) * Sin((ANG + 4) / P)) 透過 右回転 (ANG + 4) 夕焼け
			PaintPicture WBMP (224 - (S - 20) * Cos((ANG - 4) / P)) (224 - (S - 20) * Sin((ANG - 4) / P)) 透過 右回転 (ANG - 4) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG + 8) / P)) (224 - (S - 40) * Sin((ANG + 8) / P)) 透過 右回転 (ANG + 8) 夕焼け
			PaintPicture WBMP (224 - (S - 40) * Cos((ANG - 8) / P)) (224 - (S - 40) * Sin((ANG - 8) / P)) 透過 右回転 (ANG - 8) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG + 12) / P)) (224 - (S - 60) * Sin((ANG + 12) / P)) 透過 右回転 (ANG + 12) 夕焼け
			PaintPicture WBMP (224 - (S - 60) * Cos((ANG - 12) / P)) (224 - (S - 60) * Sin((ANG - 12) / P)) 透過 右回転 (ANG - 12) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG + 16) / P)) (224 - (S - 80) * Sin((ANG + 16) / P)) 透過 右回転 (ANG + 16) 夕焼け
			PaintPicture WBMP (224 - (S - 80) * Cos((ANG - 16) / P)) (224 - (S - 80) * Sin((ANG - 16) / P)) 透過 右回転 (ANG - 16) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG + 20) / P)) (224 - (S - 120) * Sin((ANG + 20) / P)) 透過 右回転 (ANG + 20) 夕焼け
			PaintPicture WBMP (224 - (S - 120) * Cos((ANG - 20) / P)) (224 - (S - 120) * Sin((ANG - 20) / P)) 透過 右回転 (ANG - 20) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG + 24) / P)) (224 - (S - 140) * Sin((ANG + 24) / P)) 透過 右回転 (ANG + 24) 夕焼け
			PaintPicture WBMP (224 - (S - 140) * Cos((ANG - 24) / P)) (224 - (S - 140) * Sin((ANG - 24) / P)) 透過 右回転 (ANG - 24) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG + 28) / P)) (224 - (S - 160) * Sin((ANG + 28) / P)) 透過 右回転 (ANG + 28) 夕焼け
			PaintPicture WBMP (224 - (S - 160) * Cos((ANG - 28) / P)) (224 - (S - 160) * Sin((ANG - 28) / P)) 透過 右回転 (ANG - 28) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG + 32) / P)) (224 - (S - 180) * Sin((ANG + 32) / P)) 透過 右回転 (ANG + 32) 夕焼け
			PaintPicture WBMP (224 - (S - 180) * Cos((ANG - 32) / P)) (224 - (S - 180) * Sin((ANG - 32) / P)) 透過 右回転 (ANG - 32) 夕焼け
			PaintPicture WBMP (224 - (S - 200) * Cos((ANG + 36) / P)) (224 - (S - 200) * Sin((ANG + 36) / P)) 透過 右回転 (ANG + 36) 夕焼け
			PaintPicture WBMP (224 - (S - 200) * Cos((ANG - 36) / P)) (224 - (S - 200) * Sin((ANG - 36) / P)) 透過 右回転 (ANG - 36) 夕焼け
			PaintPicture WBMP (224 - (S - 220) * Cos((ANG + 40) / P)) (224 - (S - 220) * Sin((ANG + 40) / P)) 透過 右回転 (ANG + 40) 夕焼け
			PaintPicture WBMP (224 - (S - 220) * Cos((ANG - 40) / P)) (224 - (S - 220) * Sin((ANG - 40) / P)) 透過 右回転 (ANG - 40) 夕焼け
			PaintPicture WBMP (224 - (S - 240) * Cos((ANG + 44) / P)) (224 - (S - 240) * Sin((ANG + 44) / P)) 透過 右回転 (ANG + 44) 夕焼け
			PaintPicture WBMP (224 - (S - 240) * Cos((ANG - 44) / P)) (224 - (S - 240) * Sin((ANG - 44) / P)) 透過 右回転 (ANG - 44) 夕焼け
			PaintPicture WBMP (224 - (S - 260) * Cos((ANG + 48) / P)) (224 - (S - 260) * Sin((ANG + 48) / P)) 透過 右回転 (ANG + 48) 夕焼け
			PaintPicture WBMP (224 - (S - 260) * Cos((ANG - 48) / P)) (224 - (S - 260) * Sin((ANG - 48) / P)) 透過 右回転 (ANG - 48) 夕焼け
		Endsw
		Refresh
		Wait 0.1
	Next
	ClearPicture
	Refresh
Return

##### ------------------------------ フランドール＝スカーレット ------------------------------ #####

そして誰もいなくなるか？:
	Center 相手ユニットＩＤ
	Wait 5
	PlaySound Glass.wav
	Line 480 480 420 0 RGB(0,0,0) BF
	Line 480 0 0 60 RGB(0,0,0) BF
	Line 0 0 60 480 RGB(0,0,0) BF
	Line 0 480 480 420 RGB(0,0,0) BF
	Refresh
	Wait 10
	PlaySound Glass.wav
	Line 420 420 360 0 RGB(0,0,0) BF
	Line 420 60 0 120 RGB(0,0,0) BF
	Line 60 60 120 480 RGB(0,0,0) BF
	Line 60 420 480 360 RGB(0,0,0) BF
	Refresh
	Wait 10
	PlaySound Glass.wav
	Line 360 360 300 0 RGB(0,0,0) BF
	Line 360 120 0 180 RGB(0,0,0) BF
	Line 120 120 180 480 RGB(0,0,0) BF
	Line 120 360 480 300 RGB(0,0,0) BF
	Refresh
	Wait 10
	PlaySound Glass.wav
	Line 180 180 224 480 RGB(0,0,0) BF
	Line 180 180 480 224 RGB(0,0,0) BF
	Line 300 300 256 0 RGB(0,0,0) BF
	Line 300 300 0 256 RGB(0,0,0) BF
	Refresh
	Wait 10
	PlaySound Glass.wav
	Line 180 180 300 300 RGB(0,0,0) BF
	Refresh
	Wait 15
	PlaySound Glass.wav
	Hide
	Wait 15
	PlaySound Warship.wav
	Wait 15
	PlaySound Glass.wav
	Show
	AutoTalk Info(対象ユニットＩＤ,名称)
	1;
	Suspend
#	WhiteOut 10
	ClearPicture
	Refresh
Return

スターボウブレイク:
	Center 対象ユニットＩＤ
	FillStyle 塗りつぶし
	FillColor RGB(255,255,255)
	DrawWidth 2
	PlaySound Sharara.wav
	For i = 0 to 17
		Color RGB(255,0,0)
		Circle (240 - i * 20) ((Random(50) + 215) + i * 20) 7
		Color RGB(255,0,255)
		Circle (240 + i * 20) ((Random(50) + 215) + i * 20) 7
		Color RGB(0,255,255)
		Circle (240 + i * 20) ((Random(50) + 215) + i * 10) 7
		Color RGB(255,150,0)
		Circle (240 - i * 20) ((Random(50) + 215) + i * 10) 7
		Color RGB(0,255,0)
		Circle (240 + i * 20) ((Random(50) + 215) + i) 7
		Color RGB(255,255,0)
		Circle (240 - i * 20) ((Random(50) + 215) + i) 7
		Color RGB(0,255,255)
		Circle (240 + i * 20) ((Random(50) + 215) - i * 10) 7
		Color RGB(255,150,0)
		Circle (240 - i * 20) ((Random(50) + 215) - i * 10) 7
		Refresh
		Wait 0.3
	Next
	PlaySound Sharara.wav
	For i = 0 to 30
		Color RGB(0,0,255)
		Circle (20 + i * 20) ((Random(50) + 465) - i * 20) 7
		Color RGB(255,0,255)
		Circle (10 + i * 20) ((Random(50) + 450) - i * 20) 7
		Color RGB(0,255,255)
		Circle (5 + i * 20) ((Random(50) + 435) - i * 20) 7
		Color RGB(0,255,0)
		Circle (0 + i * 20) ((Random(50) + 420) - i * 20) 7
		Color RGB(255,255,0)
		Circle (0 + i * 20) ((Random(50) + 405) - i * 20) 7
		Color RGB(255,150,0)
		Circle (0 + i * 20) ((Random(50) + 390) - i * 20) 7
		Color RGB(255,0,0)
		Circle (0 + i * 20) ((Random(50) + 375) - i * 20) 7
		Refresh
		Wait 0.1
	Next
	PlaySound Sharara.wav
	For i = 0 to 30
		Color RGB(0,0,255)
		Circle (480 - i * 20) ((Random(50) + 465) - i * 20) 7
		Color RGB(255,0,255)
		Circle (480 - i * 20) ((Random(50) + 450) - i * 20) 7
		Color RGB(0,255,255)
		Circle (480 - i * 20) ((Random(50) + 435) - i * 20) 7
		Color RGB(0,255,0)
		Circle (480 - i * 20) ((Random(50) + 420) - i * 20) 7
		Color RGB(255,255,0)
		Circle (480 - i * 20) ((Random(50) + 405) - i * 20) 7
		Color RGB(255,150,0)
		Circle (480 - i * 20) ((Random(50) + 390) - i * 20) 7
		Color RGB(255,0,0)
		Circle (480 - i * 20) ((Random(50) + 375) - i * 20) 7
		Refresh
		Wait 0.1
	Next
	PlaySound Sharara.wav
	For i = 0 to 30
		Color RGB(255,0,0)
		Circle (0 + i * 20) (Random(50) + 15) 7
		Color RGB(255,150,0)
		Circle (0 + i * 20) (Random(50) + 80) 7
		Color RGB(255,255,0)
		Circle (0 + i * 20) (Random(50) + 145) 7
		Color RGB(0,255,0)
		Circle (0 + i * 20) (Random(50) + 210) 7
		Color RGB(0,255,255)
		Circle (0 + i * 20) (Random(50) + 275) 7
		Color RGB(255,0,255)
		Circle (0 + i * 20) (Random(50) + 340) 7
		Color RGB(0,0,255)
		Circle (0 + i * 20) (Random(50) + 405) 7
		Refresh
		Wait 0.1
	Next
	Wait 10
	ClearPicture
	Refresh
Return

レーヴァテイン命中:
	Center 相手ユニットＩＤ
	PlaySound Warship.wav
	Line 480 0 0 480 RGB(0,0,0)
	Line 0 0 480 480 RGB(0,0,0)
	Wait 8
	Color RGB(255,0,0)
	PlaySound Breath.wav
	For i = 0 to 10
		DrawWidth 2
		Line 480 0 (480 - i * 48) (0 + i * 48)
		Line 0 0 (0 + i * 48) (0 + i * 48)
		Refresh
		Wait 0.2
	Next
	Wait 5
	PlaySound Explode(Nuclear).wav
	For i = 0 to 20
		FillStyle 塗りつぶし
		FillColor RGB(255,0,0)
		Polygon 480 0 (480 - i ^ 3) (0 + i ^ 3) (370 - i ^ 2) (0 + i ^ 2) 350 0
		Polygon 0 0 (0 + i ^ 3) (0 + i ^ 3) (110 + i ^ 2) (0 + i ^ 2) 130 0
		Refresh
		Wait 0.2
	Next
#	WhiteOut 30
	ClearPicture
	Refresh
Return

##### ------------------------------ レティ＝ホワイトロック ------------------------------ #####

フラワーウィザラウェイ:
	Local a j k
	Center 相手ユニットＩＤ
	BaseX = 240
	BaseY = 240
	FillStyle 塗りつぶし
	FillColor RGB(255,255,255)
	Color RGB(255,255,255)
	Set a 1
	PlaySound Storm.wav
	For i = 0 to 400
		If i = (a * 80) Then
			PlaySound Storm.wav
			Incr a
		EndIf
		Set j (i / 5)
		Set k (i / 2)
		Circle (Cos(j) * 40 * Sin((-5) * j)) (Sin(j) * 40 * Sin((-5) * j)) 2
		Circle (Cos(j) * 90 * Sin((-5) * j)) (Sin(j) * 90 * Sin((-5) * j)) 2
		Circle (Cos(j) * 140 * Sin((-5) * j)) (Sin(j) * 140 * Sin((-5) * j)) 2
		Circle (Cos(j) * 190 * Sin((-5) * j)) (Sin(j) * 190 * Sin((-5) * j)) 2
		Line (Cos(j) * (40 + k) * Sin((-5) * j)) (Sin(j) * (40 + k) * Sin((-5) * j)) 0 0
		Refresh
	Next
	Wait 10
	BaseX = 0
	BaseY = 0
	ClearPicture
	Refresh
Return

##### ------------------------------ 魂魄妖夢 ------------------------------ #####

現世斬:
	Center 相手ユニットＩＤ
	Font 60pt RGB(255,255,255) 明朝体 Regular 保持
	FadeOut 5
	PlaySound Slash(4).wav
	PaintString 260 0 人
	PaintString 符
	Refresh
	Wait 10
	PlaySound Slash(4).wav
	PaintString - 120 現
	Refresh
	Wait 7
	PlaySound Slash(4).wav
	PaintString 世
	Refresh
	Wait 5
	PlaySound Slash(4).wav
	PaintString 斬
	Refresh
	Wait 10
	For i = 0 to 16
		ClearPicture
		Switch i
		Case 0
			PlaySound Thunderbolt.wav
			WhiteIn 2
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
		Case 1 2
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
		Case 3 4 5
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Line 190 0 190 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 166 (0 + ((-3) + i) * 48) 透過
			Line 290 0 290 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 266 (0 + ((-3) + i) * 48) 透過
		Case  6 7 8
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Line 190 0 190 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 166 (0 + ((-3) + i) * 48) 透過
			Line 290 0 290 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 266 (0 + ((-3) + i) * 48) 透過
			Line 140 0 140 (0 + ((-6) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 116 (0 + ((-6) + i) * 48) 透過
			Line 340 0 340 (0 + ((-6) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 316 (0 + ((-6) + i) * 48) 透過
		Case 9 10 11 12 13 14 15 16
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Line 190 0 190 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 166 (0 + ((-3) + i) * 48) 透過
			Line 290 0 290 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 266 (0 + ((-3) + i) * 48) 透過
			Line 140 0 140 (0 + ((-6) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 116 (0 + ((-6) + i) * 48) 透過
			Line 340 0 340 (0 + ((-6) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 316 (0 + ((-6) + i) * 48) 透過
			Line 90 0 90 (0 + ((-9) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 66 (0 + ((-9) + i) * 48) 透過
			Line 390 0 390 (0 + ((-9) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 366 (0 + ((-9) + i) * 48) 透過
		Endsw
		Refresh
		Wait 0.1
	Next
	Font
	ClearPicture
	Refresh
Return

業風神閃斬:
	Center 相手ユニットＩＤ
	PlaySound Thunderbolt.wav
	For i = 0 to 10
		ClearPicture
		#PaintPicture Anime\Hit\EFFECT_SuperSlashHit03.bmp (0 + i * 48) 208 透過
		Line 0 240 (0 + i * 48) 240
		Refresh
		Wait 0.2
	Next
	Color RGB(255,0,0)
	FillStyle 塗りつぶし
	FillColor RGB(255,0,0)
	Wait 10
	PlaySound EvilEye.wav
	Wait 4
	PlaySound Reload(2).wav
	Wait 5
	PlaySound Explode(Nuclear).wav
	For i = 0 to 20
		ClearPicture
		Line 0 240 480 240
		#Polygon 0 240 (0 + i ^ 3) 240 (0 + i ^ 2) (220 + i) 0 (220 + i)
		#Polygon 0 240 (0 + i ^ 3) 240 (0 + i ^ 2) (260 - i) 0 (260 - i)
		Polygon 0 240 (0 + i * 24) 240 (0 + i ^ 2.5) 0 0 0
		Polygon 0 240 (0 + i * 24) 240 (0 + i ^ 2.5) 480 0 480
		Refresh
		Wait 0.1
	Next
	FillColor RGB(255,255,0)
	Color RGB(255,255,0)
	For i = 0 to 20
		Line 0 0 (0 + 24 * i) 480 BF
		Refresh
		Wait 0.1
	Next
	FillColor RGB(255,255,255)
	Color RGB(255,255,255)
	For i = 0 to 20
		Line 0 0 (0 + 24 * i) 480 BF
		Refresh
		Wait 0.1
	Next
	Wait 10
	ClearPicture
	Refresh
Return

未来永劫斬:
	Local M_Time = Info(マップ,時間帯)
	Center 相手ユニットＩＤ
	Color RGB(255,255,255)
	Font 60pt RGB(0,0,0) 明朝体 Regular
	FadeOut 5
	Wait 10
	ClearPicture
	Refresh
	PlaySound Slash(4).wav
	Line 480 0 0 480
	PaintString - - 人
	Refresh
	FadeOut 10
	Wait 7

	ClearPicture
	Refresh
	PlaySound Slash(4).wav
	Line 480 240 0 240
	PaintString - - 鬼
	Refresh
	FadeOut 10
	Wait 7

	Font 60pt RGB(255,255,255) 明朝体 Regular 保持
	PlaySound Slash(4).wav
	PaintString 240 0 未
	PaintString 来
	PaintString 200 120 永
	PaintString 劫
	PaintString 斬
	Refresh
	Wait 10

	For i = 0 to 20
		ClearPicture 0 0 480 480
		Switch i
		Case 0
			PlaySound Thunderbolt.wav
			WhiteIn 2
			東方画面色変更 Sunset
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Refresh
		Case 1 2
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Refresh
		Case 3 4
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Line 200 0 200 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 176 (0 + ((-3) + i) * 48) 透過
			Line 280 0 280 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 256 (0 + ((-3) + i) * 48) 透過
			Refresh
		Case  5 6
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Line 200 0 200 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 176 (0 + ((-3) + i) * 48) 透過
			Line 280 0 280 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 256 (0 + ((-3) + i) * 48) 透過
			Line 160 0 160 (0 + ((-5) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 136 (0 + ((-5) + i) * 48) 透過
			Line 320 0 320 (0 + ((-5) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 296 (0 + ((-5) + i) * 48) 透過
			Refresh
		Case 7 8
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Line 200 0 200 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 176 (0 + ((-3) + i) * 48) 透過
			Line 280 0 280 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 256 (0 + ((-3) + i) * 48) 透過
			Line 160 0 160 (0 + ((-5) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 136 (0 + ((-5) + i) * 48) 透過
			Line 320 0 320 (0 + ((-5) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 296 (0 + ((-5) + i) * 48) 透過
			Line 120 0 120 (0 + ((-7) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 96 (0 + ((-7) + i) * 48) 透過
			Line 360 0 360 (0 + ((-7) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 336 (0 + ((-7) + i) * 48) 透過
			Refresh
		Case 9 10
			Line 240 0 240 (0 + i * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp - (0 + i * 48) 透過
			Line 200 0 200 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 166 (0 + ((-3) + i) * 48) 透過
			Line 280 0 280 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 266 (0 + ((-3) + i) * 48) 透過
			Line 160 0 160 (0 + ((-5) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 136 (0 + ((-5) + i) * 48) 透過
			Line 320 0 320 (0 + ((-5) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 296 (0 + ((-5) + i) * 48) 透過
			Line 120 0 120 (0 + ((-7) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 96 (0 + ((-7) + i) * 48) 透過
			Line 360 0 360 (0 + ((-7) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 336 (0 + ((-7) + i) * 48) 透過
			Line 80 0 80 (0 + ((-9) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 56 (0 + ((-9) + i) * 48) 透過
			Line 400 0 400 (0 + ((-9) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 376 (0 + ((-9) + i) * 48) 透過
			Refresh
		Case 11 12 13 14 15 16 17 18 19 20
			Line 200 0 200 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 166 (0 + ((-3) + i) * 48) 透過
			Line 280 0 280 (0 + ((-3) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 266 (0 + ((-3) + i) * 48) 透過
			Line 160 0 160 (0 + ((-5) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 136 (0 + ((-5) + i) * 48) 透過
			Line 320 0 320 (0 + ((-5) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 296 (0 + ((-5) + i) * 48) 透過
			Line 120 0 120 (0 + ((-7) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 96 (0 + ((-7) + i) * 48) 透過
			Line 360 0 360 (0 + ((-7) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 336 (0 + ((-7) + i) * 48) 透過
			Line 80 0 80 (0 + ((-9) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 56 (0 + ((-9) + i) * 48) 透過
			Line 400 0 400 (0 + ((-9) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 376 (0 + ((-9) + i) * 48) 透過
			Line 40 0 40 (0 + ((-11) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 16 (0 + ((-11) + i) * 48) 透過
			Line 440 0 440 (0 + ((-11) + i) * 48) RGB(255,255,255)
			PaintPicture Anime\Hit\EFFECT_StrongSlashHit02.bmp 416 (0 + ((-11) + i) * 48) 透過
			Refresh
		Endsw
		Wait 0.1
	Next
	Font

	東方画面色フィルター M_Time
	ClearPicture
	Refresh
Return

##### ------------------------------ 八雲藍 ------------------------------ #####

アルティメットブディスト:
	Center 対象ユニットＩＤ
	PlaySound Interference.wav
	For i = 0 to 40
		ClearPicture 0 0 480 480
		Refresh
		DrawWidth 7
		Line 240 240 (240 + 50 * Sin(i / 20)) (240 + 50 * Cos(i / 20)) RGB(255,255,255)
		Line (240 + 50 * Sin(i / 20)) (240 + 50 * Cos(i / 20)) (240 + 100 * Sin((i + 20) / 20)) (240 + 100 * Cos((i + 20) / 20)) _
			RGB(255,255,255)
		Line 240 240 (240 - 50 * Sin(i / 20)) (240 - 50 * Cos(i / 20)) RGB(255,255,255)
		Line (240 - 50 * Sin(i / 20)) (240 - 50 * Cos(i / 20)) (240 - 100 * Sin((i + 20) / 20)) (240 - 100 * Cos((i + 20) / 20)) _
			RGB(255,255,255)
		Line 240 240 (240 + 50 * Cos(i / (-20))) (240 + 50 * Sin(i / (-20))) RGB(255,255,255)
		Line (240 + 50 * Cos(i / (-20))) (240 + 50 * Sin(i / (-20))) _
			(240 + 100 * Cos((i + 20) / (-20))) (240 + 100 * Sin((i + 20) / (-20))) RGB(255,255,255)
		Line 240 240 (240 - 50 * Cos(i / (-20))) (240 - 50 * Sin(i / (-20))) RGB(255,255,255)
		Line (240 - 50 * Cos(i / (-20))) (240 - 50 * Sin(i / (-20))) _
			(240 - 100 * Cos((i + 20) / (-20))) (240 - 100 * Sin((i + 20) / (-20))) RGB(255,255,255)
		DrawWidth 15
		Line (240 - 50 * Cos(i / (-20))) (240 - 50 * Sin(i / (-20))) _
			(240 - 100 * Cos((i + 20) / (-20))) (240 - 100 * Sin((i + 20) / (-20))) RGB(70,100,200)
		Line (240 - 50 * Sin(i / 20)) (240 - 50 * Cos(i / 20)) (240 - 100 * Sin((i + 20) / 20)) (240 - 100 * Cos((i + 20) / 20)) _
			RGB(70,100,200)
		Line (240 + 50 * Sin(i / 20)) (240 + 50 * Cos(i / 20)) (240 + 100 * Sin((i + 20) / 20)) (240 + 100 * Cos((i + 20) / 20)) _
			RGB(70,100,200)
		Line 240 240 (240 + 50 * Sin(i / 20)) (240 + 50 * Cos(i / 20)) RGB(70,100,200)
		Line 240 240 (240 - 50 * Sin(i / 20)) (240 - 50 * Cos(i / 20)) RGB(70,100,200)
		Line 240 240 (240 + 50 * Cos(i / (-20))) (240 + 50 * Sin(i / (-20))) RGB(70,100,200)
		Line (240 + 50 * Cos(i / (-20))) (240 + 50 * Sin(i / (-20))) _
			(240 + 100 * Cos((i + 20) / (-20))) (240 + 100 * Sin((i + 20) / (-20))) RGB(70,100,200)
		Line 240 240 (240 - 50 * Cos(i / (-20))) (240 - 50 * Sin(i / (-20))) RGB(70,100,200)
		Color RGB(255,255,255)
		DrawWidth 1
		FillStyle 塗りつぶし
		FillColor RGB(255,255,255)
		Circle (240 + 50 * Sin(i / 20)) (240 + 50 * Cos(i / 20)) 13
		Circle (240 - 50 * Sin(i / 20)) (240 - 50 * Cos(i / 20)) 13
		Circle (240 + 50 * Cos(i / (-20))) (240 + 50 * Sin(i / (-20))) 13
		Circle (240 - 50 * Cos(i / (-20))) (240 - 50 * Sin(i / (-20))) 13
		DrawWidth 7
		Line 240 240 (240 + 100 * Sin(i / (-4))) (240 + 100 * Cos(i / (-4))) RGB(255,255,255)
		Line (240 + 100 * Sin(i / (-4))) (240 + 100 * Cos(i / (-4))) _
			(240 - 400 * Sin((i - 16.5) / (-4))) (240 - 400 * Cos((i - 16.5) / (-4))) RGB(255,255,255)
		Line 240 240 (240 - 100 * Sin(i / (-4))) (240 - 100 * Cos(i / (-4))) RGB(255,255,255)
		Line (240 - 100 * Sin(i / (-4))) (240 - 100 * Cos(i / (-4))) _
			(240 + 400 * Sin((i - 16.5) / (-4))) (240 + 400 * Cos((i - 16.5) / (-4))) RGB(255,255,255)
		Line 240 240 (240 + 100 * Cos(i / 4)) (240 + 100 * Sin(i / 4)) RGB(255,255,255)
		Line (240 + 100 * Cos(i / 4)) (240 + 100 * Sin(i / 4)) _
			(240 - 400 * Cos((i - 16.5) / 4)) (240 - 400 * Sin((i - 16.5) / 4)) RGB(255,255,255)
		Line 240 240 (240 - 100 * Cos(i / 4)) (240 - 100 * Sin(i / 4)) RGB(255,255,255)
			RGB(255,100,70)
		Line (240 - 100 * Cos(i / 4)) (240 - 100 * Sin(i / 4)) (240 + 400 * Cos((i - 16.5) / 4)) (240 + 400 * Sin((i - 16.5) / 4)) _
			RGB(255,255,255)
		DrawWidth 15
		Line 240 240 (240 + 100 * Sin(i / (-4))) (240 + 100 * Cos(i / (-4))) RGB(255,0,0)
		Line (240 + 100 * Sin(i / (-4))) (240 + 100 * Cos(i / (-4))) _
			(240 - 400 * Sin((i - 16.5) / (-4))) (240 - 400 * Cos((i - 16.5) / (-4))) RGB(255,100,70)
		Line 240 240 (240 - 100 * Sin(i / (-4))) (240 - 100 * Cos(i / (-4))) RGB(255,0,0)
		Line (240 - 100 * Sin(i / (-4))) (240 - 100 * Cos(i / (-4))) _
			(240 + 400 * Sin((i - 16.5) / (-4))) (240 + 400 * Cos((i - 16.5) / (-4))) RGB(255,100,70)
		Line (240 + 100 * Cos(i / 4)) (240 + 100 * Sin(i / 4)) (240 - 400 * Cos((i - 16.5) / 4)) (240 - 400 * Sin((i - 16.5) / 4)) _
			RGB(255,100,70)
		Line (240 - 100 * Cos(i / 4)) (240 - 100 * Sin(i / 4)) (240 + 400 * Cos((i - 16.5) / 4)) (240 + 400 * Sin((i - 16.5) / 4)) _
		Line 240 240 (240 + 100 * Cos(i / 4)) (240 + 100 * Sin(i / 4)) RGB(255,0,0)
		Line 240 240 (240 - 100 * Cos(i / 4)) (240 - 100 * Sin(i / 4)) RGB(255,0,0)
		Color RGB(255,255,255)
		DrawWidth 1
		FillStyle 塗りつぶし
		FillColor RGB(255,255,255)
		Circle (240 + 100 * Sin(i / (-4))) (240 + 100 * Cos(i / (-4))) 13
		Circle (240 - 100 * Sin(i / (-4))) (240 - 100 * Cos(i / (-4))) 13
		Circle (240 + 100 * Cos(i / 4)) (240 + 100 * Sin(i / 4)) 13
		Circle (240 - 100 * Cos(i / 4)) (240 - 100 * Sin(i / 4)) 13
		Circle 240 240 6
		Refresh
		Wait 0.3
	Next
	Wait 2
	ClearPicture
	Refresh
Return

##### ------------------------------ 八雲紫 ------------------------------ #####

永夜四重結界:
	Center 相手ユニットＩＤ
	DrawWidth 3
	PlaySound Args(1)
	For i = 0 to 40
		ClearPicture 0 0 480 480
		Refresh
		FillStyle 透明
		Color RGB(255,0,200)
		Polygon (240 - (3.5 * i) * Cos(i / 6.35)) (240 - (i * 3.5) * Sin(i / 6.35)) _
			(240 - (i * 3.5) * Cos((i + 10) / 6.35)) (240 - (i * 3.5) * Sin((i + 10) / 6.35)) _
			(240 - (i * 3.5) * Cos((i + 20) / 6.35)) (240 - (i * 3.5) * Sin((i + 20) / 6.35)) _
			(240 - (i * 3.5) * Cos((i + 30) / 6.35)) (240 - (i * 3.5) * Sin((i + 30) / 6.35))
		Color RGB(255,0,255)
		Polygon (240 - (3 * i) * Cos(i / (-6.35))) (240 - (i * 3) * Sin(i / (-6.35))) _
			(240 - (i * 3) * Cos((i + 10) / (-6.35))) (240 - (i * 3) * Sin((i + 10) / (-6.35))) _
			(240 - (i * 3) * Cos((i + 20) / (-6.35))) (240 - (i * 3) * Sin((i + 20) / (-6.35))) _
			(240 - (i * 3) * Cos((i + 30) / (-6.35))) (240 - (i * 3) * Sin((i + 30) / (-6.35)))
		Color RGB(200,0,255)
		Polygon (240 - (2.5 * i) * Cos(i / 6.35)) (240 - (i * 2.5) * Sin(i / 6.35)) _
			(240 - (i * 2.5) * Cos((i + 10) / 6.35)) (240 - (i * 2.5) * Sin((i + 10) / 6.35)) _
			(240 - (i * 2.5) * Cos((i + 20) / 6.35)) (240 - (i * 2.5) * Sin((i + 20) / 6.35)) _
			(240 - (i * 2.5) * Cos((i + 30) / 6.35)) (240 - (i * 2.5) * Sin((i + 30) / 6.35))
		Color RGB(255,200,255)
		FillStyle 塗りつぶし
		FillColor RGB(255,0,255)
		Polygon (240 - (2 * i) * Cos(i / (-6.35))) (240 - (i * 2) * Sin(i / (-6.35))) _
			(240 - (i * 2) * Cos((i + 10) / (-6.35))) (240 - (i * 2) * Sin((i + 10) / (-6.35))) _
			(240 - (i * 2) * Cos((i + 20) / (-6.35))) (240 - (i * 2) * Sin((i + 20) / (-6.35))) _
			(240 - (i * 2) * Cos((i + 30) / (-6.35))) (240 - (i * 2) * Sin((i + 30) / (-6.35)))
		Refresh
		Wait 0.3
	Next
	PlaySound Args(2)
	For i = 0 to 40
		ClearPicture 0 0 480 480
		Refresh
		FillStyle 透明
		Color RGB(255,0,210)
		Polygon (240 - 140 * Cos(i / 6.35)) (240 - 140 * Sin(i / 6.35)) _
			(240 - 140 * Cos((i + 10) / 6.35)) (240 - 140 * Sin((i + 10) / 6.35)) _
			(240 - 140 * Cos((i + 20) / 6.35)) (240 - 140 * Sin((i + 20) / 6.35)) _
			(240 - 140 * Cos((i + 30) / 6.35)) (240 - 140 * Sin((i + 30) / 6.35))
		Color RGB(255,0,255)
		Polygon (240 - 120 * Cos(i / (-6.35))) (240 - 120 * Sin(i / (-6.35))) _
			(240 - 120 * Cos((i + 10) / (-6.35))) (240 - 120 * Sin((i + 10) / (-6.35))) _
			(240 - 120 * Cos((i + 20) / (-6.35))) (240 - 120 * Sin((i + 20) / (-6.35))) _
			(240 - 120 * Cos((i + 30) / (-6.35))) (240 - 120 * Sin((i + 30) / (-6.35)))
		Color RGB(200,0,255)
		Polygon (240 - 100 * Cos(i / 6.35)) (240 - 100 * Sin(i / 6.35)) _
			(240 - 100 * Cos((i + 10) / 6.35)) (240 - 100 * Sin((i + 10) / 6.35)) _
			(240 - 100 * Cos((i + 20) / 6.35)) (240 - 100 * Sin((i + 20) / 6.35)) _
			(240 - 100 * Cos((i + 30) / 6.35)) (240 - 100 * Sin((i + 30) / 6.35))
		FillStyle 塗りつぶし
		FillColor RGB(255,0,255)
		Color RGB(255,200,255)
		Polygon (240 - 80 * Cos(i / (-6.35))) (240 - 80 * Sin(i / (-6.35))) _
			(240 - 80 * Cos((i + 10) / (-6.35))) (240 - 80 * Sin((i + 10) / (-6.35))) _
			(240 - 80 * Cos((i + 20) / (-6.35))) (240 - 80 * Sin((i + 20) / (-6.35))) _
			(240 - 80 * Cos((i + 30) / (-6.35))) (240 - 80 * Sin((i + 30) / (-6.35)))
		Refresh
		Wait (0.4 - (i / 200))
	Next
#	WhiteOut 10
	ClearPicture
	Refresh
Return

##### ------------------------------ ミスティア＝ローレライ ------------------------------ #####

周囲暗闇化:
	Center 相手ユニットＩＤ
	PlaySound BeamCoat.wav
#	WhiteOut 10

	For i = 1 to Args(1)
		ClearPicture
		DrawWidth (50 + (10 * i))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait 0.1
	next
Return

イルスタードダイブ攻撃:
	Local i
	Local C_X
	Local C_Y
	Local UID

	_UnSetBattleAnimeValue

	Set UID _GetName(対象ユニットＩＤ,_GetIDFromArgs())

	Set C_X WX(UID)
	Set C_Y WY(UID)

	Incr C_X -8
	Incr C_Y -8

	_SelectSound "Whiz.wav" _GetWavFromArgs() 
	Wait Start
	For i = 1 To 4
		ClearPicture
		PaintPicture ("Attack\EFFECT_Projection(4)0" & i & ".bmp") C_X C_Y 透過 _ColorTime()
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait Until i
	Next

	ClearPicture
	DrawWidth (50 + (10 * args(1)))
	Circle 239 239 270 RGB(0,0,0)
	Refresh
	_SetAnimeData_AttackCount 4
Return "Keep"

夜雀の歌攻撃:
	Local i
	Local C_X
	Local C_Y
	Local UID

	_UnSetBattleAnimeValue

	Set UID _GetName(対象ユニットＩＤ,_GetIDFromArgs())

	Set C_X WX(UID)
	Set C_Y WY(UID)

	Incr C_X -8
	Incr C_Y -8

	_SelectSound "Whiz.wav" _GetWavFromArgs() 
	Wait Start
	For i = 1 To 4
		ClearPicture
		PaintPicture ("Attack\EFFECT_Projection(4)0" & i & ".bmp") C_X C_Y 透過 _ColorTime()
		PaintPicture ("Attack\EFFECT_Projection(4)0" & i & ".bmp") C_X C_Y 透過 右回転 45 _ColorTime()
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait Until i
	Next

	ClearPicture
	DrawWidth (50 + (10 * args(1)))
	Circle 239 239 270 RGB(0,0,0)
	Refresh
	_SetAnimeData_AttackCount 4
Return "Keep"

真夜中のコーラスマスター攻撃:
	Local i
	Local C_X
	Local C_Y
	Local UID

	_UnSetBattleAnimeValue

	Set UID _GetName(対象ユニットＩＤ,_GetIDFromArgs())

	Set C_X WX(UID)
	Set C_Y WY(UID)

	Incr C_X -8
	Incr C_Y -8

	_SelectSound "Whiz.wav" _GetWavFromArgs() 
	Wait Start
	For i = 1 To 4
		ClearPicture
		PaintPicture ("Attack\EFFECT_Projection(4)0" & i & ".bmp") C_X C_Y 透過 _ColorTime()
		PaintPicture ("Attack\EFFECT_Projection(4)0" & i & ".bmp") C_X C_Y 透過 右回転 45 _ColorTime()
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait Until i
	Next

	Local ANG

	_UnSetBattleAnimeValue

	Set UID _GetName(対象ユニットＩＤ,_GetIDFromArgs())

	Set C_X WX(UID)
	Set C_Y WY(UID)

	Incr C_X -16
	Incr C_Y -16

	Set ANG _GetAngle(UID)

	_SelectSound gunpod.wav _GetWavFromArgs() 
	Wait Start
	For i = 1 To 5
		ClearPicture
		PaintPicture ("Bullet\EFFECT_ShotGunBullet0" & i & ".bmp") C_X C_Y 透過 右回転 ANG _ColorTime()
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait Until (i * 0.8)
	Next

	ClearPicture
	DrawWidth (50 + (10 * args(1)))
	Circle 239 239 270 RGB(0,0,0)
	Refresh
	_SetAnimeData_AttackCount 4
Return "Keep"

暗闇命中:
	Local i
	Local ANG
	Local C_X
	Local C_Y
	Set C_X (WX(相手ユニットＩＤ) - 16)
	Set C_Y (WY(相手ユニットＩＤ) - 16)

	Set ANG _GetAngle(_GetName(対象ユニットＩＤ,_GetIDFromArgs() ))

	Wait Start

	For i = 1 To 7
		_SelectSound "Explode(Small).wav" _GetWavFromArgs()
		ClearPicture
		PaintPicture ("Hit\EFFECT_ShotGunHit0" & i & ".bmp") C_X C_Y 透過 右回転 ANG _ColorTime()
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait Until (i * 0.5)
	Next

	ClearPicture
	DrawWidth (50 + (10 * args(1)))
	Circle 239 239 270 RGB(0,0,0)
	Refresh
Return "Keep"

ブラインドナイトバード:
	Local i
	Local C_X
	Local C_Y
	Local UID

	_UnSetBattleAnimeValue

	Set UID _GetName(対象ユニットＩＤ,_GetIDFromArgs())

	Set C_X (WX(UID) - 8)
	Set C_Y (WY(UID) - 8)

	_SelectSound "Whiz.wav" _GetWavFromArgs() 
	Wait Start
	For i = 1 To 4
		ClearPicture
		PaintPicture ("Attack\EFFECT_Projection(4)0" & i & ".bmp") C_X C_Y 透過 _ColorTime()
		PaintPicture ("Attack\EFFECT_Projection(4)0" & i & ".bmp") C_X C_Y 透過 右回転 45 _ColorTime()
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait Until i
	Next

	ClearPicture
	DrawWidth (50 + (10 * args(1)))
	Circle 239 239 270 RGB(0,0,0)
	Refresh
Return "Keep"

暗闇拡散ビーム発射:
	Local i
	Local j
	Local ANG
	Local B_C
	Local C_X
	Local C_Y
	Local UID

	_UnSetBattleAnimeValue

	Set UID _GetName(対象ユニットＩＤ,_GetIDFromArgs())

	Set C_X (WX(UID) - 8)
	Set C_Y (WY(UID) - 8)

	Set B_C _GetName("(Pink)",_GetBeamColor(_GetColorFromArgs()))

	Set ANG _GetAngle(UID)

	Wait Start
	PlaySound Charge.wav
	For i = 1 To 3
		ClearPicture
		PaintPicture ("Beam\EFFECT_MBeam" & B_C & "0" & i & ".bmp") C_X C_Y 透過 右回転 ANG _ColorTime()
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait Until (i * 0.8)
	Next

	Incr C_X -8
	Incr C_Y -8
	For j = 0 To 1
		Wait Start
		_SelectSound "LaserGun.wav" _GetWavFromArgs()
		For i = 1 To 5
			ClearPicture
			PaintPicture ("Beam\EFFECT_DBeam" & B_C & "0" & i & ".bmp") C_X C_Y 透過 右回転 ANG _ColorTime()
			DrawWidth (50 + (10 * args(1)))
			Circle 239 239 270 RGB(0,0,0)
			Wait Until (i * 0.8)
		Next
	Next

	ClearPicture
	DrawWidth (50 + (10 * args(1)))
	Circle 239 239 270 RGB(0,0,0)
	Refresh

	Set 戦闘アニメ変数[色] B_C
Return "Keep"


暗闇オールレンジ:
	Local i R_C G_C B_C
	Local C_X = WX(相手ユニットＩＤ) - 16
	Local C_Y = WY(相手ユニットＩＤ) - 16

	Switch _ColorTime()
	Case セピア
		Set R_C 140
		Set G_C 110
		Set B_C 60
	Case 白黒
		Set R_C 188
		Set G_C 188
		Set B_C 188
	Case 夕焼け
		Set R_C 180
		Set G_C 80
		Set B_C 60
	Case 水中
		Set R_C 70
		Set G_C 100
		Set B_C 180
	Case Else
		Set R_C 180
		Set G_C 180
		Set B_C 140
	EndSw

	_SelectSound "LaserGun.wav" _GetWavFromArgs()
	For i = 1 To 20
		ClearPicture
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Switch i
		Case 3 5 7 9 11 13 15 17 18 19 20
			PlaySound Explode(Small).wav
		EndSw
		DrawWidth 1
		Color RGB((R_C + ((R_C / 30) * i)),(G_C + ((G_C / 20) * i)),(B_C + ((B_C / 20) * i)))
		Line (Random(64) + C_X) (Random(64) + C_Y) (Random(64) + C_X) (Random(64) + C_Y)
		Line (Random(64) + C_X) (Random(64) + C_Y) (Random(64) + C_X) (Random(64) + C_Y)
		DrawWidth (50 + (10 * args(1)))
		Circle 239 239 270 RGB(0,0,0)
		Refresh
		Wait 0.5
	Next

	ClearPicture
	Refresh
Return

##### ------------------------------ 上白沢慧音 ------------------------------ #####

日出づる国の天子:
	Center 対象ユニットＩＤ
	PlaySound Args(1)
	ClearPicture 0 0 480 480
	Refresh
	For i = 0 to 60
		DrawWidth 2
		Line (240 + 1 * Cos(i  / (-9.545))) (240 + 1 * Sin(i / (-9.545))) _
			(240 + 400 * Cos(i / (-9.545))) (240 + 400 * Sin(i / (-9.545))) RGB(0,0,255)
		DrawWidth 1
		Line (240 + 1 * Cos(i  / (-9.545))) (240 + 1 * Sin(i / (-9.545))) _
			(240 + 400 * Cos(i / (-9.545))) (240 + 400 * Sin(i / (-9.545))) RGB(255,255,255)
		Refresh
		Wait 0.2
	Next
	For i = 0 to 60
		DrawWidth 2
		Line (240 - 1 * Cos((i + 0.5) / 9.545)) (240 - 1 * Sin((i + 0.5) / 9.545)) _
			(240 - 400 * Cos((i + 0.5) / 9.545)) (240 - 400 * Sin((i + 0.5) / 9.545)) RGB(255,0,0)
		DrawWidth 1
		Line (240 - 1 * Cos((i + 0.5) / 9.545)) (240 - 1 * Sin((i + 0.5) / 9.545)) _
			(240 - 400 * Cos((i + 0.5) / 9.545)) (240 - 400 * Sin((i + 0.5) / 9.545)) RGB(255,255,255)
		Refresh
		Wait 0.2
	Next
	For i = 0 to 60
		DrawWidth 5
		Line (240 + 1 * Cos(i  / 9.545)) (240 + 1 * Sin(i / 9.545)) _
			(240 + 400 * Cos(i / 9.545)) (240 + 400 * Sin(i / 9.545)) RGB(50,50,255)
		DrawWidth 7
		Line (240 + 1 * Cos(i  / 9.545)) (240 + 1 * Sin(i / 9.545)) _
			(240 + 30 * Cos(i / 9.545)) (240 + 30 * Sin(i / 9.545)) RGB(255,255,255)
		DrawWidth 3
		Line (240 + 1 * Cos(i  / 9.545)) (240 + 1 * Sin(i / 9.545)) _
			(240 + 400 * Cos(i / 9.545)) (240 + 400 * Sin(i / 9.545)) RGB(255,255,255)
		Refresh
		Wait 0.2
	Next
	For i = 0 to 60
		DrawWidth 5
		Line (240 - 1 * Cos((i + 0.5) / (-9.545))) (240 - 1 * Sin((i + 0.5) / (-9.545))) _
			(240 - 400 * Cos((i + 0.5) / (-9.545))) (240 - 400 * Sin((i + 0.5) / (-9.545))) RGB(255,50,50)
		DrawWidth 7
		Line (240 - 1 * Cos((i + 0.5) / (-9.545))) (240 - 1 * Sin((i + 0.5) / (-9.545))) _
			(240 - 30 * Cos((i + 0.5) / (-9.545))) (240 - 30 * Sin((i + 0.5) / (-9.545))) RGB(255,255,255)
		DrawWidth 3
		Line (240 - 1 * Cos((i + 0.5) / (-9.545))) (240 - 1 * Sin((i + 0.5) / (-9.545))) _
			(240 - 400 * Cos((i + 0.5) / (-9.545))) (240 - 400 * Sin((i + 0.5) / (-9.545))) RGB(255,255,255)
		Refresh
		Wait 0.2
	Next
#	WhiteOut 10
	ClearPicture
	Refresh
Return

高天原:
	Center 対象ユニットＩＤ
	DrawWidth 1
	FillStyle 塗りつぶし
	FillColor RGB(255,255,255)
	PlaySound Args(1)
	For i = 0 to 30
		Line (160 + 30 * Sin(i  / (-4.772))) (240 + 30 * Cos(i / (-4.772))) (160 - 400 * Sin(i / (-4.772))) (240 - 400 * Cos(i / (-4.772))) RGB(0,100,255)
		Line (160 + 30 * Sin((i + 10) / (-4.772))) (240 + 30 * Cos((i + 10) / (-4.772))) (160 - 400 * Sin((i + 10) / (-4.772))) (240 - 400 * Cos((i + 10) / (-4.772))) RGB(0,100,255)
		Line (160 + 30 * Sin((i - 10) / (-4.772))) (240 + 30 * Cos((i - 10) / (-4.772))) (160 - 400 * Sin((i - 10) / (-4.772))) (240 - 400 * Cos((i - 10) / (-4.772))) RGB(0,100,255)
		Line (320 + 30 * Sin(i  / 4.772)) (240 + 30 * Cos(i / 4.772)) (320 - 400 * Sin(i / 4.772)) (240 - 400 * Cos(i / 4.772)) RGB(0,100,255)
		Line (320 + 30 * Sin((i + 10) / 4.772)) (240 + 30 * Cos((i + 10) / 4.772)) (320 - 400 * Sin((i + 10) / 4.772)) (240 - 400 * Cos((i + 10) / 4.772)) RGB(0,100,255)
		Line (320 + 30 * Sin((i - 10) / 4.772)) (240 + 30 * Cos((i - 10) / 4.772)) (320 - 400 * Sin((i - 10) / 4.772)) (240 - 400 * Cos((i - 10) / 4.772)) RGB(0,100,255)
		Line (236 + 30 * Cos(i  / (-4.772))) (320 + 30 * Sin(i / (-4.772))) (236 - 400 * Cos(i / (-4.772))) (320 - 400 * Sin(i / (-4.772))) RGB(0,100,255)
		Line (236 + 30 * Cos(i  / 4.772)) (320 + 30 * Sin(i / 4.772)) (236 - 400 * Cos(i / 4.772)) (320 - 400 * Sin(i / 4.772)) RGB(0,100,255)
		Line (244 - 30 * Cos(i  / (-4.772))) (320 - 30 * Sin(i / (-4.772))) (244 + 400 * Cos(i / (-4.772))) (320 + 400 * Sin(i / (-4.772))) RGB(0,100,255)
		Line (244 - 30 * Cos(i  / 4.772)) (320 - 30 * Sin(i / 4.772)) (244 + 400 * Cos(i / 4.772)) (320 + 400 * Sin(i / 4.772)) RGB(0,100,255)
		Circle (160 + 30 * Sin(i  / (-4.772))) (240 + 30 * Cos(i / (-4.772))) 10 RGB(200,100,255)
		Circle (160 + 30 * Sin((i + 10) / (-4.772))) (240 + 30 * Cos((i + 10) / (-4.772))) 10 RGB(200,100,255)
		Circle (160 + 30 * Sin((i - 10) / (-4.772))) (240 + 30 * Cos((i - 10) / (-4.772))) 10 RGB(200,100,255)
		Circle (320 + 30 * Sin(i  / 4.772)) (240 + 30 * Cos(i / 4.772)) 10 RGB(200,100,255)
		Circle (320 + 30 * Sin((i + 10) / 4.772)) (240 + 30 * Cos((i + 10) / 4.772)) 10 RGB(200,100,255)
		Circle (320 + 30 * Sin((i - 10) / 4.772)) (240 + 30 * Cos((i - 10) / 4.772)) 10 RGB(200,100,255)
		Circle (236 + 30 * Cos(i  / (-4.772))) (320 + 30 * Sin(i / (-4.772))) 10 RGB(200,100,255)
		Circle (236 + 30 * Cos(i  / 4.772)) (320 + 30 * Sin(i / 4.772)) 10 RGB(200,100,255)
		Circle (244 - 30 * Cos(i  / (-4.772))) (320 - 30 * Sin(i / (-4.772))) 10 RGB(200,100,255)
		Circle (244 - 30 * Cos(i  / 4.772)) (320 - 30 * Sin(i / 4.772)) 10 RGB(200,100,255)
		Refresh
		Wait 0.2
	Next
	DrawWidth 2
	For i = 0 to 30
		Line (160 + 30 * Sin(i  / (-4.772))) (240 + 30 * Cos(i / (-4.772))) (160 - 400 * Sin(i / (-4.772))) (240 - 400 * Cos(i / (-4.772))) RGB(100,200,255)
		Line (160 + 30 * Sin((i + 10) / (-4.772))) (240 + 30 * Cos((i + 10) / (-4.772))) (160 - 400 * Sin((i + 10) / (-4.772))) (240 - 400 * Cos((i + 10) / (-4.772))) RGB(100,200,255)
		Line (160 + 30 * Sin((i - 10) / (-4.772))) (240 + 30 * Cos((i - 10) / (-4.772))) (160 - 400 * Sin((i - 10) / (-4.772))) (240 - 400 * Cos((i - 10) / (-4.772))) RGB(100,200,255)
		Line (320 + 30 * Sin(i  / 4.772)) (240 + 30 * Cos(i / 4.772)) (320 - 400 * Sin(i / 4.772)) (240 - 400 * Cos(i / 4.772)) RGB(100,200,255)
		Line (320 + 30 * Sin((i + 10) / 4.772)) (240 + 30 * Cos((i + 10) / 4.772)) (320 - 400 * Sin((i + 10) / 4.772)) (240 - 400 * Cos((i + 10) / 4.772)) RGB(100,200,255)
		Line (320 + 30 * Sin((i - 10) / 4.772)) (240 + 30 * Cos((i - 10) / 4.772)) (320 - 400 * Sin((i - 10) / 4.772)) (240 - 400 * Cos((i - 10) / 4.772)) RGB(100,200,255)
		Line (236 + 30 * Cos(i  / (-4.772))) (320 + 30 * Sin(i / (-4.772))) (236 - 400 * Cos(i / (-4.772))) (320 - 400 * Sin(i / (-4.772))) RGB(100,200,255)
		Line (236 + 30 * Cos(i  / 4.772)) (320 + 30 * Sin(i / 4.772)) (236 - 400 * Cos(i / 4.772)) (320 - 400 * Sin(i / 4.772)) RGB(100,200,255)
		Line (244 - 30 * Cos(i  / (-4.772))) (320 - 30 * Sin(i / (-4.772))) (244 + 400 * Cos(i / (-4.772))) (320 + 400 * Sin(i / (-4.772))) RGB(100,200,255)
		Line (244 - 30 * Cos(i  / 4.772)) (320 - 30 * Sin(i / 4.772)) (244 + 400 * Cos(i / 4.772)) (320 + 400 * Sin(i / 4.772)) RGB(100,200,255)
		Refresh
		Wait 0.2
	Next
#	WhiteOut 15
	ClearPicture
	Refresh
Return

##### ------------------------------ 鈴仙＝優曇華院＝イナバ ------------------------------ #####

狂眼:
	Fadeout 5
	Playsound BeamSaber.wav

	FillStyle 塗りつぶし

	For i = 0 to 42
		Line 0 0 480 480 RGB(0,0,0) BF
		Color RGB((i * 6), 0, 0)
		FillColor RGB((i * 6), 0, 0)
		Polygon 58 215  154 215  206 254  195 276  120 276
		Polygon 422 215  326 215  272 254  284 276  358 276
		Wait 0.2
		Refresh
	next

	Wait 8

	Playsound Args(1)
#	WhiteOut 5
	ClearPicture
	Refresh
Return

##### ------------------------------ 八意永琳 ------------------------------ #####

天人の系譜:
	Center 相手ユニットＩＤ
	PlaySound BeamCoat.wav
	Line 240 0 240 50
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 240 50 190 100
	Line 240 50 290 100
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 190 100 190 150
	Line 190 100 140 100
	Line 290 100 290 150
	Line 290 100 340 100
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 190 150 140 200
	Line 190 150 240 200
	Line 140 100 90 50
	Line 140 100 90 150
	Line 290 150 240 200
	Line 290 150 340 200
	Line 340 100 390 50
	Line 340 100 390 150
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 140 200 90 200
	Line 140 200 140 250
	Line 240 200 290 200
	Line 240 200 240 250
	Line 90 50 90 0
	Line 90 50 40 50
	Line 90 150 90 200
	Line 90 150 40 150
	Line 240 200 190 200
	Line 340 200 390 200
	Line 340 200 340 250
	Line 390 50 390 0
	Line 390 50 440 50
	Line 390 150 440 150
	Line 390 150 390 200
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 90 200 40 150
	Line 90 200 40 250
	Line 90 200 140 250
	Line 140 250 90 300
	Line 140 250 190 300
	Line 290 200 340 150
	Line 290 200 340 250
	Line 240 250 290 300
	Line 240 250 190 300
	Line 40 50 0 10
	Line 40 50 0 90
	Line 40 150 0 110
	Line 40 150 0 190
	Line 190 200 140 150
	Line 190 200 140 250
	Line 390 200 440 150
	Line 390 200 440 250
	Line 390 200 340 250
	Line 340 250 390 300
	Line 340 250 290 300
	Line 440 50 480 10
	Line 440 50 480 90
	Line 440 150 480 110
	Line 440 150 480 190
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 40 150 40 100
	Line 40 150 0 150
	Line 40 250 0 250
	Line 40 250 40 300
	Line 140 250 90 250
	Line 140 250 140 300
	Line 140 250 190 250
	Line 90 300 40 300
	Line 90 300 90 350
	Line 190 300 140 300
	Line 190 300 190 350
	Line 190 300 240 300
	Line 340 150 340 100
	Line 340 150 390 150
	Line 340 250 290 250
	Line 340 250 340 300
	Line 340 250 390 250
	Line 290 300 240 300
	Line 290 300 290 350
	Line 290 300 340 300
	Line 140 150 90 150
	Line 140 150 140 100
	Line 440 150 480 150
	Line 440 150 440 100
	Line 440 250 480 250
	Line 440 250 440 300
	Line 390 300 440 300
	Line 390 300 390 350 
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 40 100 0 60
	Line 40 100 90 50
	Line 40 300 0 260
	Line 40 300 0 340
	Line 40 300 90 350
	Line 90 150 40 100
	Line 90 150 40 200
	Line 90 250 40 200
	Line 90 250 40 300
	Line 90 350 40 400
	Line 90 350 140 400
	Line 140 100 190 50
	Line 140 100 90 50
	Line 140 300 90 250
	Line 140 300 90 350
	Line 140 300 190 350
	Line 190 250 240 200
	Line 190 250 240 300
	Line 190 350 140 400
	Line 190 350 240 400
	Line 240 300 190 250
	Line 240 300 290 250
	Line 240 300 190 350
	Line 240 300 290 350
	Line 290 250 240 200
	Line 290 250 240 300
	Line 290 350 240 400
	Line 290 350 340 400
	Line 340 100 290 50
	Line 340 100 390 50
	Line 340 300 290 350
	Line 340 300 390 350
	Line 340 300 390 250
	Line 390 150 440 100
	Line 390 150 440 200
	Line 390 250 440 200
	Line 390 250 440 300
	Line 390 350 340 400
	Line 390 350 440 400
	Line 440 100 390 50
	Line 440 100 480 60
	Line 440 300 390 350
	Line 440 300 480 340
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 40 100 40 50
	Line 40 100 0 100
	Line 40 200 0 200
	Line 40 200 40 250
	Line 40 200 40 150
	Line 40 300 0 300
	Line 40 300 40 350
	Line 40 400 0 400
	Line 40 400 40 450
	Line 90 50 140 50
	Line 90 250 90 200
	Line 90 250 40 250
	Line 90 350 140 350
	Line 90 350 90 400
	Line 90 350 40 350
	Line 140 400 90 400
	Line 140 400 140 450
	Line 140 400 190 400
	Line 190 50 190 0
	Line 190 50 240 50
	Line 190 250 190 200
	Line 190 350 140 350
	Line 190 350 190 400
	Line 190 350 240 350
	Line 240 200 240 150
	Line 240 300 240 350
	Line 240 400 190 400
	Line 240 400 240 450
	Line 240 400 290 400
	Line 290 50 240 50
	Line 290 50 290 0
	Line 290 250 290 200
	Line 290 350 240 350
	Line 290 350 290 400
	Line 290 350 340 350
	Line 340 400 290 400
	Line 340 400 340 450
	Line 340 400 390 400
	Line 390 50 340 50
	Line 390 250 390 200
	Line 390 250 440 250
	Line 390 350 340 350
	Line 390 350 390 400
	Line 390 350 440 350
	Line 440 100 440 150
	Line 440 100 480 100
	Line 440 200 440 150
	Line 440 200 440 250
	Line 440 200 480 200
	Line 440 300 440 350
	Line 440 300 480 300
	Line 440 400 440 450
	Line 440 400 480 400
	Refresh
	Wait 2
	PlaySound BeamCoat.wav
	Line 40 50 90 0
	Line 40 150 90 100
	Line 40 250 0 290
	Line 40 250 90 300
	Line 40 250 0 210
	Line 40 350 0 310
	Line 40 350 0 390
	Line 40 350 90 400
	Line 40 450 10 480
	Line 40 450 70 480
	Line 90 200 140 150
	Line 90 400 40 350
	Line 90 400 40 450
	Line 90 400 140 450
	Line 140 50 190 0
	Line 140 50 190 100
	Line 140 350 90 300
	Line 140 350 90 400
	Line 140 350 190 300
	Line 140 350 190 400
	Line 140 450 110 480
	Line 140 450 170 480
	Line 190 200 240 150
	Line 190 400 140 450
	Line 190 400 240 450
	Line 240 50 190 0
	Line 240 50 290 0
	Line 240 150 190 100
	Line 240 150 290 100
	Line 240 350 190 400
	Line 240 350 190 300
	Line 240 350 190 400
	Line 240 350 290 300
	Line 240 350 290 400
	Line 240 450 210 480
	Line 240 450 270 480
	Line 290 200 240 150
	Line 290 400 240 450
	Line 290 400 340 400
	Line 340 50 290 0
	Line 340 50 290 100
	Line 340 350 290 300
	Line 340 350 290 400
	Line 340 350 390 300
	Line 340 350 390 400
	Line 340 450 310 480
	Line 340 450 370 480
	Line 390 200 340 150
	Line 390 400 340 450
	Line 390 400 440 350
	Line 390 400 440 450
	Line 440 50 390 0
	Line 440 150 390 100
	Line 440 250 390 300
	Line 440 250 480 210
	Line 440 250 480 290
	Line 440 350 390 400
	Line 440 350 480 310
	Line 440 350 480 390
	Line 440 450 410 480
	Line 440 450 470 480
	Refresh
	Wait 2
	DrawWidth 3
	PlaySound BeamCoat.wav
	Line 240 0 240 50
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 240 50 190 100
	Line 240 50 290 100
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 190 100 190 150
	Line 190 100 140 100
	Line 290 100 290 150
	Line 290 100 340 100
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 190 150 140 200
	Line 190 150 240 200
	Line 140 100 90 50
	Line 140 100 90 150
	Line 290 150 240 200
	Line 290 150 340 200
	Line 340 100 390 50
	Line 340 100 390 150
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 140 200 90 200
	Line 140 200 140 250
	Line 240 200 290 200
	Line 240 200 240 250
	Line 90 50 90 0
	Line 90 50 40 50
	Line 90 150 90 200
	Line 90 150 40 150
	Line 240 200 190 200
	Line 340 200 390 200
	Line 340 200 340 250
	Line 390 50 390 0
	Line 390 50 440 50
	Line 390 150 440 150
	Line 390 150 390 200
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 90 200 40 150
	Line 90 200 40 250
	Line 90 200 140 250
	Line 140 250 90 300
	Line 140 250 190 300
	Line 290 200 340 150
	Line 290 200 340 250
	Line 240 250 290 300
	Line 240 250 190 300
	Line 40 50 0 10
	Line 40 50 0 90
	Line 40 150 0 110
	Line 40 150 0 190
	Line 190 200 140 150
	Line 190 200 140 250
	Line 390 200 440 150
	Line 390 200 440 250
	Line 390 200 340 250
	Line 340 250 390 300
	Line 340 250 290 300
	Line 440 50 480 10
	Line 440 50 480 90
	Line 440 150 480 110
	Line 440 150 480 190
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 40 150 40 100
	Line 40 150 0 150
	Line 40 250 0 250
	Line 40 250 40 300
	Line 140 250 90 250
	Line 140 250 140 300
	Line 140 250 190 250
	Line 90 300 40 300
	Line 90 300 90 350
	Line 190 300 140 300
	Line 190 300 190 350
	Line 190 300 240 300
	Line 340 150 340 100
	Line 340 150 390 150
	Line 340 250 290 250
	Line 340 250 340 300
	Line 340 250 390 250
	Line 290 300 240 300
	Line 290 300 290 350
	Line 290 300 340 300
	Line 140 150 90 150
	Line 140 150 140 100
	Line 440 150 480 150
	Line 440 150 440 100
	Line 440 250 480 250
	Line 440 250 440 300
	Line 390 300 440 300
	Line 390 300 390 350 
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 40 100 0 60
	Line 40 100 90 50
	Line 40 300 0 260
	Line 40 300 0 340
	Line 40 300 90 350
	Line 90 150 40 100
	Line 90 150 40 200
	Line 90 250 40 200
	Line 90 250 40 300
	Line 90 350 40 400
	Line 90 350 140 400
	Line 140 100 190 50
	Line 140 100 90 50
	Line 140 300 90 250
	Line 140 300 90 350
	Line 140 300 190 350
	Line 190 250 240 200
	Line 190 250 240 300
	Line 190 350 140 400
	Line 190 350 240 400
	Line 240 300 190 250
	Line 240 300 290 250
	Line 240 300 190 350
	Line 240 300 290 350
	Line 290 250 240 200
	Line 290 250 240 300
	Line 290 350 240 400
	Line 290 350 340 400
	Line 340 100 290 50
	Line 340 100 390 50
	Line 340 300 290 350
	Line 340 300 390 350
	Line 340 300 390 250
	Line 390 150 440 100
	Line 390 150 440 200
	Line 390 250 440 200
	Line 390 250 440 300
	Line 390 350 340 400
	Line 390 350 440 400
	Line 440 100 390 50
	Line 440 100 480 60
	Line 440 300 390 350
	Line 440 300 480 340
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 40 100 40 50
	Line 40 100 0 100
	Line 40 200 0 200
	Line 40 200 40 250
	Line 40 200 40 150
	Line 40 300 0 300
	Line 40 300 40 350
	Line 40 400 0 400
	Line 40 400 40 450
	Line 90 50 140 50
	Line 90 250 90 200
	Line 90 250 40 250
	Line 90 350 140 350
	Line 90 350 90 400
	Line 90 350 40 350
	Line 140 400 90 400
	Line 140 400 140 450
	Line 140 400 190 400
	Line 190 50 190 0
	Line 190 50 240 50
	Line 190 250 190 200
	Line 190 350 140 350
	Line 190 350 190 400
	Line 190 350 240 350
	Line 240 200 240 150
	Line 240 300 240 350
	Line 240 400 190 400
	Line 240 400 240 450
	Line 240 400 290 400
	Line 290 50 240 50
	Line 290 50 290 0
	Line 290 250 290 200
	Line 290 350 240 350
	Line 290 350 290 400
	Line 290 350 340 350
	Line 340 400 290 400
	Line 340 400 340 450
	Line 340 400 390 400
	Line 390 50 340 50
	Line 390 250 390 200
	Line 390 250 440 250
	Line 390 350 340 350
	Line 390 350 390 400
	Line 390 350 440 350
	Line 440 100 440 150
	Line 440 100 480 100
	Line 440 200 440 150
	Line 440 200 440 250
	Line 440 200 480 200
	Line 440 300 440 350
	Line 440 300 480 300
	Line 440 400 440 450
	Line 440 400 480 400
	Refresh
	Wait 0.2
	PlaySound BeamCoat.wav
	Line 40 50 90 0
	Line 40 150 90 100
	Line 40 250 0 290
	Line 40 250 90 300
	Line 40 250 0 210
	Line 40 350 0 310
	Line 40 350 0 390
	Line 40 350 90 400
	Line 40 450 10 480
	Line 40 450 70 480
	Line 90 200 140 150
	Line 90 400 40 350
	Line 90 400 40 450
	Line 90 400 140 450
	Line 140 50 190 0
	Line 140 50 190 100
	Line 140 350 90 300
	Line 140 350 90 400
	Line 140 350 190 300
	Line 140 350 190 400
	Line 140 450 110 480
	Line 140 450 170 480
	Line 190 200 240 150
	Line 190 400 140 450
	Line 190 400 240 450
	Line 240 50 190 0
	Line 240 50 290 0
	Line 240 150 190 100
	Line 240 150 290 100
	Line 240 350 190 400
	Line 240 350 190 300
	Line 240 350 190 400
	Line 240 350 290 300
	Line 240 350 290 400
	Line 240 450 210 480
	Line 240 450 270 480
	Line 290 200 240 150
	Line 290 400 240 450
	Line 290 400 340 400
	Line 340 50 290 0
	Line 340 50 290 100
	Line 340 350 290 300
	Line 340 350 290 400
	Line 340 350 390 300
	Line 340 350 390 400
	Line 340 450 310 480
	Line 340 450 370 480
	Line 390 200 340 150
	Line 390 400 340 450
	Line 390 400 440 350
	Line 390 400 440 450
	Line 440 50 390 0
	Line 440 150 390 100
	Line 440 250 390 300
	Line 440 250 480 210
	Line 440 250 480 290
	Line 440 350 390 400
	Line 440 350 480 310
	Line 440 350 480 390
	Line 440 450 410 480
	Line 440 450 470 480
	Refresh
	Wait 20
	ClearPicture
	Refresh
Return

##### ------------------------------ 藤原妹紅 ------------------------------ #####

妹紅_鳳凰羽描画:
#引数１ X1 X2 X3 Y4
#引数２ Y1 Y2 Y3 Y4
#引数３ A0WA120 A0WA140 A0WA150
#引数４ A1WA120 A1WA140 A1WA150
#引数５ 初期値X
#引数６ 初期値Y
#引数７ 段階
	Local i
	Local BX = Args(5)
	Local BY = Args(6)
	Local Step = Args(7) - 1
	For i = 0 To Step
		Circle (Args(1) - (BX + i * 15) * Cos(Args(4))) (Args(2) - (BY + i * 15) * Sin(Args(4))) 7
		Circle (Args(1) - (BX + i * 15) * Cos(Args(3))) (Args(2) - (BY + i * 15) * Sin(Args(3))) 7
	Next
Return

鳳翼天翔:
	Local X1 Y1 N
	Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())					//UID＝攻撃側ユニットID
	Local ANG = _GetAngle(UID)								//ANG＝角度
	Local XS1 = (((WX(相手ユニットＩＤ) + 16) - (WX(対象ユニットＩＤ) + 16)) / 400)		//XS1＝X軸距離
	Local YS1 = (((WY(相手ユニットＩＤ) + 16) - (WY(対象ユニットＩＤ) + 16)) / 400)		//YS1＝Y軸距離
	Local A0 = (ANG / 57.2957914)									//各種角度かタンジェントだか？
	Local A0TA180 = ((ANG + 180) / 57.2957914)							//T＝テール＝尻尾？
	Local A1WA120 = ((ANG - 120) / 57.2957914)							//W＝ウイング＝羽、0と1が左右、120.140.150が羽1〜3？
	Local A0WA120 = ((ANG + 120) / 57.2957914)
	Local A1WA140 = ((ANG - 140) / 57.2957914)
	Local A0WA140 = ((ANG + 140) / 57.2957914)
	Local A1WA150 = ((ANG - 150) / 57.2957914)
	Local A0WA150 = ((ANG + 150) / 57.2957914)

	Center 対象ユニットＩＤ

	FillStyle 塗りつぶし
	FillColor RGB(255,255,255)
	PlaySound AntiShipMissile.wav

	For i = 0 to 30
		Color RGB(255,Random(150),0)
		DrawWidth (1 + Random(4))
		Set N ((i ^ 3) / 3)
		Set X1 ((240 + XS1 * N) - 1 * Cos(A0))
		Set Y1 ((240 + YS1 * N) - 1 * Sin(A0))
		ClearPicture
		#体
		Circle X1 Y1 12
		#頭
		Circle (X1 - 20 * Cos(A0)) (Y1 - 20 * Sin(A0)) 7
		Circle (X1 - 35 * Cos(A0)) (Y1 - 35 * Sin(A0)) 7
		#尾
		Circle (X1 - 20 * Cos(A0TA180)) (Y1 - 20 * Sin(A0TA180)) 7
		#羽
		妹紅_鳳凰羽描画 X1 Y1 A0WA120 A1WA120 20 20 4
		#羽2
		妹紅_鳳凰羽描画 X1 Y1 A0WA140 A1WA140 45 45 4
		#羽3
		妹紅_鳳凰羽描画 X1 Y1 A0WA150 A1WA150 75 75 2
		Refresh
		Wait 0.2
	Next
	ClearPicture
	Refresh
Return

フジヤマヴォルケイノ攻撃:
	Local i j
	Center 対象ユニットＩＤ
	For i = 0 to 5
		PaintPicture Anime\Beam\EFFECT_LBeam(White)04.bmp (208 + 32 * Sin((i * 10)  / 9.545)) (208 + 32 * Cos((i * 10) / 9.545)) 透過
		Refresh
		Wait 0.2
	Next
	For i = 0 to 20
		ClearPicture 0 0 480 480
		For j = 0 To 5
			PaintPicture Anime\Beam\EFFECT_LBeam(White)04.bmp _
				((208 + 32 * Sin((j * 10)  / 9.545)) + ((((WX(相手ユニットＩＤ) - 16) - (208 + 32 * Sin((j * 10)  / 9.545))) / 20) * i)) _
				((208 + 32 * Cos((j * 10) / 9.545)) + ((((WY(相手ユニットＩＤ) - 16) - (208 + 32 * Cos((j * 10)  / 9.545))) / 20) * i)) _
				透過
		Next
		Refresh
		Wait 0.5
	Next
	ClearPicture
	Refresh
Return

フジヤマヴォルケイノ命中:
	Local opt
	Center 相手ユニットＩＤ
	PlaySound Charge(Long).wav
	Switch Random(2)
	Case 1
		opt = "透過 上半分"
	Case 2
		opt = "透過"
	Endsw

	For i = 0 to 40
		Color RGB((0 + i * 6),0,0)
		FillStyle 塗りつぶし
		FillColor RGB((0 + i * 6),0,0)
		Polygon 240 300 80 240 240 180 400 240
		PaintPicture Info(相手ユニットＩＤ,グラフィック) - - opt
		Refresh
		Wait 0.3
	Next

	PlaySound Explode(Nuclear).wav
	For i = 0 to 20
		Color RGB(255,0,0)
		FillStyle 塗りつぶし
		FillColor RGB(255,0,0)
		Polygon 240 300 240 (300 - i ^ 3) 340 (240 - i ^ 2) 400 240
		Polygon 240 300 240 (300 - i ^ 3) 140 (240 - i ^ 2) 80 240
		Refresh
		Wait 0.2
	Next
#	WhiteOut 30
	ClearPicture
	Refresh
Return

フェニックス再誕:
	Local X1 Y1 X2 Y2 X3 Y3 X4 Y4 N N2 N3 N4
	Local M_Time = Info(マップ,時間帯)
	Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
	Local ANG = _GetAngle(UID)
	Local XS1 = (((WX(相手ユニットＩＤ) + 16) - (WX(対象ユニットＩＤ) + 16)) / 400)
	Local YS1 = (((WY(相手ユニットＩＤ) + 16) - (WY(対象ユニットＩＤ) + 16)) / 400)
	Local A0 = (ANG / 57.2957914)
	Local A0TA180 = ((ANG + 180) / 57.2957914)
	Local A1WA120 = ((ANG - 120) / 57.2957914)
	Local A0WA120 = ((ANG + 120) / 57.2957914)
	Local A1WA140 = ((ANG - 140) / 57.2957914)
	Local A0WA140 = ((ANG + 140) / 57.2957914)
	Local A1WA150 = ((ANG - 150) / 57.2957914)
	Local A0WA150 = ((ANG + 150) / 57.2957914)

	Center 対象ユニットＩＤ

	FillStyle 塗りつぶし
	FillColor RGB(255,255,255)
	東方画面色変更 Sunset
	For i = 0 to 40
		Switch 1
		Case 0 4 8 12 16
			PlaySound AntiShipMissile.wav
		EndSw
		ClearPicture
		Switch i
		Case 0 1 2 3
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N ((i ^ 3) / 3)
			Set X1 ((240 + XS1 * N) - 1 * Cos(A0))
			Set Y1 ((240 + YS1 * N) - 1 * Sin(A0))
			#体
			Circle X1 Y1 12
			#頭
			Circle (X1 - 20 * Cos(A0)) (Y1 - 20 * Sin(A0)) 7
			Circle (X1 - 35 * Cos(A0)) (Y1 - 35 * Sin(A0)) 7
			#尾
			Circle (X1 - 20 * Cos(A0TA180)) (Y1 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X1 Y1 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X1 Y1 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X1 Y1 A0WA150 A1WA150 75 75 2
		Case 4 5 6 7
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N ((i ^ 3) / 3)
			Set X1 ((240 + XS1 * N) - 1 * Cos(A0))
			Set Y1 ((240 + YS1 * N) - 1 * Sin(A0))
			#体
			Circle X1 Y1 12
			#頭
			Circle (X1 - 20 * Cos(A0)) (Y1 - 20 * Sin(A0)) 7
			Circle (X1 - 35 * Cos(A0)) (Y1 - 35 * Sin(A0)) 7
			#尾
			Circle (X1 - 20 * Cos(A0TA180)) (Y1 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X1 Y1 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X1 Y1 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X1 Y1 A0WA150 A1WA150 75 75 2

			#二羽目
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N2 (((i - 4) ^ 3) / 3)
			Set X2 ((240 + XS1 * N2) - 1 * Cos(ANG / 57.2957914))
			Set Y2 ((240 + YS1 * N2) - 1 * Sin(ANG / 57.2957914))
			#体
			Circle X2 Y2 12
			#頭
			Circle (X2 - 20 * Cos(A0)) (Y2 - 20 * Sin(A0)) 7
			Circle (X2 - 35 * Cos(A0)) (Y2 - 35 * Sin(A0)) 7
			#尾
			Circle (X2 - 20 * Cos(A0TA180)) (Y2 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X2 Y2 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X2 Y2 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X2 Y2 A0WA150 A1WA150 75 75 2
		Case 8 9 10 11
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N ((i ^ 3) / 3)
			Set X1 ((240 + XS1 * N) - 1 * Cos(A0))
			Set Y1 ((240 + YS1 * N) - 1 * Sin(A0))
			#体
			Circle X1 Y1 12
			#頭
			Circle (X1 - 20 * Cos(A0)) (Y1 - 20 * Sin(A0)) 7
			Circle (X1 - 35 * Cos(A0)) (Y1 - 35 * Sin(A0)) 7
			#尾
			Circle (X1 - 20 * Cos(A0TA180)) (Y1 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X1 Y1 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X1 Y1 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X1 Y1 A0WA150 A1WA150 75 75 2
			
			#二羽目
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N2 (((i - 4) ^ 3) / 3)
			Set X2 ((240 + XS1 * N2) - 1 * Cos(A0))
			Set Y2 ((240 + YS1 * N2) - 1 * Sin(A0))
			#体
			Circle X2 Y2 12
			#頭
			Circle (X2 - 20 * Cos(A0)) (Y2 - 20 * Sin(A0)) 7
			Circle (X2 - 35 * Cos(A0)) (Y2 - 35 * Sin(A0)) 7
			#尾
			Circle (X2 - 20 * Cos(A0TA180)) (Y2 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X2 Y2 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X2 Y2 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X2 Y2 A0WA150 A1WA150 75 75 2

			#三羽目
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N3 (((i - 8) ^ 3) / 3)
			Set X3 ((240 + XS1 * N3) - 1 * Cos(A0))
			Set Y3 ((240 + YS1 * N3) - 1 * Sin(A0))
			#体
			Circle X3 Y3 12
			#頭
			Circle (X3 - 20 * Cos(A0)) (Y3 - 20 * Sin(A0)) 7
			Circle (X3 - 35 * Cos(A0)) (Y3 - 35 * Sin(A0)) 7
			#尾
			Circle (X3 - 20 * Cos(A0TA180)) (Y3 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X3 Y3 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X3 Y3 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X3 Y3 A0WA150 A1WA150 75 75 2
		Case 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N ((i ^ 3) / 3)
			Set X1 ((240 + XS1 * N) - 1 * Cos(A0))
			Set Y1 ((240 + YS1 * N) - 1 * Sin(A0))
			#体
			Circle X1 Y1 12
			#頭
			Circle (X1 - 20 * Cos(A0)) (Y1 - 20 * Sin(A0)) 7
			Circle (X1 - 35 * Cos(A0)) (Y1 - 35 * Sin(A0)) 7
			#尾
			Circle (X1 - 20 * Cos(A0TA180)) (Y1 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X1 Y1 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X1 Y1 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X1 Y1 A0WA150 A1WA150 75 75 2
			
			#二羽目
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N2 (((i - 4) ^ 3) / 3)
			Set X2 ((240 + XS1 * N2) - 1 * Cos(A0))
			Set Y2 ((240 + YS1 * N2) - 1 * Sin(A0))
			#体
			Circle X2 Y2 12
			#頭
			Circle (X2 - 20 * Cos(A0)) (Y2 - 20 * Sin(A0)) 7
			Circle (X2 - 35 * Cos(A0)) (Y2 - 35 * Sin(A0)) 7
			#尾
			Circle (X2 - 20 * Cos(A0TA180)) (Y2 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X2 Y2 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X2 Y2 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X2 Y2 A0WA150 A1WA150 75 75 2

			#三羽目
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N3 (((i - 8) ^ 3) / 3)
			Set X3 ((240 + XS1 * N3) - 1 * Cos(A0))
			Set Y3 ((240 + YS1 * N3) - 1 * Sin(A0))
			#体
			Circle X3 Y3 12
			#頭
			Circle (X3 - 20 * Cos(A0)) (Y3 - 20 * Sin(A0)) 7
			Circle (X3 - 35 * Cos(A0)) (Y3 - 35 * Sin(A0)) 7
			#尾
			Circle (X3 - 20 * Cos(A0TA180)) (Y3 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X3 Y3 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X3 Y3 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X3 Y3 A0WA150 A1WA150 75 75 2
			
			#四羽目
			Color RGB(255,Random(150),0)
			DrawWidth (1 + Random(4))
			Set N4 (((i - 12) ^ 3) / 3)
			Set X4 ((240 + XS1 * N4) - 1 * Cos(A0))
			Set Y4 ((240 + YS1 * N4) - 1 * Sin(A0))
			#体
			Circle X4 Y4 12
			#頭
			Circle (X4 - 20 * Cos(A0)) (Y4 - 20 * Sin(A0)) 7
			Circle (X4 - 35 * Cos(A0)) (Y4 - 35 * Sin(A0)) 7
			#尾
			Circle (X4 - 20 * Cos(A0TA180)) (Y4 - 20 * Sin(A0TA180)) 7
			#羽
			妹紅_鳳凰羽描画 X4 Y4 A0WA120 A1WA120 20 20 4
			#羽2
			妹紅_鳳凰羽描画 X4 Y4 A0WA140 A1WA140 45 45 4
			#羽3
			妹紅_鳳凰羽描画 X4 Y4 A0WA150 A1WA150 75 75 2
		Endsw
		Refresh
		Wait 0.2
	Next

	東方画面色フィルター M_Time

	ClearPicture
	Refresh
Return

##### ------------------------------ 四季映姫＝ヤマザナドゥ ------------------------------ #####

浄頗梨審判:
	Local i C_X C_Y
	Local BMP_FILE
	Local UNIT_FILE
	Local UID = _GetName(対象ユニットＩＤ,_GetIDFromArgs())
	Local DRCT
	Local C_S
	Local G_S = _GetPicSizeFromArgs()
	Local X_F

	_CenteringCheck UID
	Set BMP_FILE _GetBMPName(対象ユニットＩＤ)
	Set UNIT_FILE _GetBMPName(UID)
	Set C_X (_Get_WX(UID) + 16 - (G_S \ 2)) 
	Set C_Y (_Get_WY(UID) + 16 - (G_S \ 2))

	If (_Get_X(UID) > _Get_X(相手ユニットＩＤ)) Then
		Set DRCT ""
	Else
		Set DRCT "左右反転"
	EndIf
	Wait Start
	_SelectSound "-.wav" _GetWavFromArgs()

	For i = 1 To 12
		ClearPicture
		Switch i
		Case 1
			PaintPicture BMP_FILE (C_X - G_S) (C_Y + (G_S * 0.666)) (G_S * 3) (G_S \ 3) _
				透過 DRCT 暗 暗 暗 暗 暗 _ColorTime(1)
		Case 2
			PaintPicture BMP_FILE (C_X - (G_S \ 2)) (C_Y + (G_S \ 2)) (G_S * 2) (G_S \ 2) _
				透過 DRCT 暗 暗 暗 暗 _ColorTime(1)
		Case 3
			PaintPicture BMP_FILE (C_X - (G_S \ 4)) (C_Y + (G_S * 0.33)) (G_S * 1.5) (G_S \ 1.5) _
				透過 DRCT 暗 暗 暗 _ColorTime(1)
		Case 4
			PaintPicture BMP_FILE C_X C_Y G_S G_S 透過 DRCT 暗 暗 _ColorTime(1)
		Case 5
			PaintPicture BMP_FILE C_X C_Y G_S G_S 透過 DRCT 暗 _ColorTime(1)
		Case 6
			PaintPicture BMP_FILE C_X C_Y G_S G_S 透過 DRCT 明 _ColorTime(1)
		Case 7
			PaintPicture BMP_FILE C_X C_Y G_S G_S 透過 DRCT 明 明 明 _ColorTime(1)
		Case 8 9
			PaintPicture BMP_FILE C_X C_Y G_S G_S 透過 DRCT 明 明 明 明 明 _ColorTime(1)
		Case 10
			PaintPicture BMP_FILE C_X C_Y G_S G_S 透過 DRCT 明 明 明 _ColorTime(1)
		Case 11
			PaintPicture BMP_FILE C_X C_Y G_S G_S 透過 DRCT 明 _ColorTime(1)
		Case 12
			PaintPicture BMP_FILE C_X C_Y G_S G_S 透過 DRCT _ColorTime(1)
		EndSw
		Refresh
		Wait Until (i * 0.5)
	Next
Return "Keep"

##### ------------------------------ 東風谷早苗 ------------------------------ #####

グレイソーマタージ:
	Center 対象ユニットＩＤ
	PlaySound BeamShot.wav
	For i = 1 To 6
		ClearPicture
		PaintPicture Anime\Bullet\EFFECT_StarBullet(LightBlue)01.bmp (240 - (i * 4)) (240 - (i * 4)) (8 * i) (8 * i) 透過 上下反転
		Refresh
		Wait 0.5
	Next
	Wait 2
	For i = 1 To 6
		PaintPicture Anime\Bullet\EFFECT_StarBullet(Orange)01.bmp (240 - (i * 2)) (240 - (i * 2)) (4 * i) (4 * i) 透過
		Refresh
		Wait 0.5
	Next
	Wait 3
	PlaySound Whiz.wav
	For i = 1 To 20
		ClearPicture
		PaintPicture Anime\Bullet\EFFECT_StarBullet(LightBlue)01.bmp (216 - (i * 8)) (216 - (i * 8)) 48 48 透過 上下反転
		PaintPicture Anime\Bullet\EFFECT_StarBullet(LightBlue)01.bmp (216 + (i * 8)) (216 - (i * 8)) 48 48 透過 上下反転
		PaintPicture Anime\Bullet\EFFECT_StarBullet(LightBlue)01.bmp (216 - (i * 8)) 216 48 48 透過 上下反転
		PaintPicture Anime\Bullet\EFFECT_StarBullet(LightBlue)01.bmp (216 + (i * 8)) 216 48 48 透過 上下反転
		PaintPicture Anime\Bullet\EFFECT_StarBullet(LightBlue)01.bmp 216 (216 + (i * 8)) 48 48 透過 上下反転
		PaintPicture Anime\Bullet\EFFECT_StarBullet(Orange)01.bmp (228 - (i * 4)) (228 + (i * 4)) 24 24 透過
		PaintPicture Anime\Bullet\EFFECT_StarBullet(Orange)01.bmp (228 + (i * 4)) (228 + (i * 4)) 24 24 透過
		PaintPicture Anime\Bullet\EFFECT_StarBullet(Orange)01.bmp (228 - (i * 4)) 228 24 24 透過
		PaintPicture Anime\Bullet\EFFECT_StarBullet(Orange)01.bmp (228 + (i * 4)) 228 24 24 透過
		PaintPicture Anime\Bullet\EFFECT_StarBullet(Orange)01.bmp 228 (228 - (i * 4)) 24 24 透過
		Refresh
		Wait 0.4
	Next
	ClearPicture
	Refresh
Return

##### ------------------------------ 封獣ぬえ ------------------------------ #####

平安京の悪夢:
	Color RGB(255,0,0)
	PlaySound LaserGun.wav
	For i = 1 To 10
		DrawWidth (i)
		Line 0 0 0 480
		Line 96 0 96 480
		Line 192 0 192 480
		Line 288 0 288 480
		Line 384 0 384 480
		Line 480 0 480 480
		Line 0 0 480 0
		Line 0 96 480 96
		Line 0 192 480 192
		Line 0 288 480 288
		Line 0 384 480 384
		Line 0 480 480 480
		Refresh
		Wait 0.5
	Next
	ClearPicture
	Refresh
Return

